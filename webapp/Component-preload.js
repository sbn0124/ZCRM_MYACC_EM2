/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "cus/crm/myaccounts/ZCRM_MYACC_EM2/Component-preload",
	"modules": {
		"cus/crm/myaccounts/ZCRM_MYACC_EM2/Component.js": "jQuery.sap.declare(\"cus.crm.myaccounts.ZCRM_MYACC_EM2.Component\");\n// use the load function for getting the optimized preload file if present\nsap.ui.component.load({\n\tname: \"cus.crm.myaccounts\",\n\t// Use the below URL to run the extended application when SAP-delivered application is deployed on SAPUI5 ABAP Repository\n\turl: \"/sap/bc/ui5_ui5/sap/CRM_MYACCOUNTS\" // we use a URL relative to our own component\n\t\t// extension application is deployed with customer namespace\n});\n(function() {\n\tjQuery.sap.registerModulePath(\"sap.cus.crm.lib.reuse\", \"/sap/bc/ui5_ui5/sap/crm_lib_reuse/sap/cus/crm/lib/reuse\");\n}());\nthis.cus.crm.myaccounts.Component.extend(\"cus.crm.myaccounts.ZCRM_MYACC_EM2.Component\", {\n\tmetadata: {\n\t\tversion: \"1.0\",\n\t\tconfig: {\n\t\t\t\"sap.ca.serviceConfigs\": [{\n\t\t\t\t\"name\": \"CRM_BUPA_ODATA\",\n\t\t\t\t\"serviceUrl\": \"/sap/opu/odata/sap/ZCRM_BUPA_ODATA_EM_SRV/\",\n\t\t\t\t\"isDefault\": true,\n\t\t\t\t\"useBatch\": true,\n\t\t\t\t\"countSupported\": true,\n\t\t\t\t\"mockedDataSource\": \"./model/metadata.xml\"\n\t\t\t}],\n\t\t\t\"sap.ca.i18Nconfigs\": {\n\t\t\t\t\"bundleName\": \"cus.crm.myaccounts.ZCRM_MYACC_EM2.i18n.i18n\"\n\t\t\t}\n\t\t},\n\t\tcustomizing: {\n\t\t\t\"sap.ui.viewReplacements\": {\n\t\t\t\t\"cus.crm.myaccounts.view.overview.Opportunities\": {\n\t\t\t\t\t\"viewName\": \"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.overview.OpportunitiesCustom\",\n\t\t\t\t\t\"type\": \"XML\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"sap.ui.controllerExtensions\": {\n\t\t\t\t\"cus.crm.myaccounts.view.overview.Opportunities\": {\n\t\t\t\t\t\"controllerName\": \"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.overview.OpportunitiesCustom\"\n\t\t\t\t},\n\t\t\t\t\"cus.crm.myaccounts.view.overview.GeneralData\": {\n\t\t\t\t\t\"controllerName\": \"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.overview.GeneralDataCustom\"\n\t\t\t\t},\n\t\t\t\t\"cus.crm.myaccounts.view.maintain.GeneralDataEdit\": {\n\t\t\t\t\t\"controllerName\": \"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.maintain.GeneralDataEditCustom\"\n\t\t\t\t},\n\t\t\t\t\"cus.crm.myaccounts.view.overview.OverviewPage\": {\n\t\t\t\t\t\"controllerName\": \"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.overview.OverviewPageCustom\"\n\t\t\t\t},\n\t\t\t\t\"cus.crm.myaccounts.view.overview.Contacts\": {\n\t\t\t\t\t\"controllerName\": \"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.overview.ContactsCustom\"\n\t\t\t\t},\n\t\t\t\t\"cus.crm.myaccounts.view.overview.MarketingAttributes\": {\n\t\t\t\t\t\"controllerName\": \"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.overview.MarketingAttributesCustom\"\n\t\t\t\t},\n\t\t\t\t\"cus.crm.myaccounts.view.overview.Attachments\": {\n\t\t\t\t\t\"controllerName\": \"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.overview.AttachmentsCustom\"\n\t\t\t\t},\n\t\t\t\t\"cus.crm.myaccounts.view.overview.Notes\": {\n\t\t\t\t\t\"controllerName\": \"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.overview.NotesCustom\"\n\t\t\t\t},\n\t\t\t\t\"cus.crm.myaccounts.view.overview.Appointments\": {\n\t\t\t\t\t\"controllerName\": \"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.overview.AppointmentsCustom\"\n\t\t\t\t},\n\t\t\t\t\"cus.crm.myaccounts.view.search.SearchResult\": {\n\t\t\t\t\t\"controllerName\": \"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.search.SearchResultCustom\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"sap.ui.viewExtensions\": {\n\t\t\t\t\"cus.crm.myaccounts.view.overview.GeneralData\": {\n\t\t\t\t\t\"extDisplayFormMiddle\": {\n\t\t\t\t\t\t\"className\": \"sap.ui.core.Fragment\",\n\t\t\t\t\t\t\"fragmentName\": \"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.overview.GeneralData_extDisplayFormMiddleCustom\",\n\t\t\t\t\t\t\"type\": \"XML\"\n\t\t\t\t\t},\n\t\t\t\t\t\"extDisplayFormAddress\": {\n\t\t\t\t\t\t\"className\": \"sap.ui.core.Fragment\",\n\t\t\t\t\t\t\"fragmentName\": \"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.overview.GeneralData_extDisplayFormAddressCustom\",\n\t\t\t\t\t\t\"type\": \"XML\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"cus.crm.myaccounts.view.maintain.GeneralDataEdit\": {\n\t\t\t\t\t\"extEditFormMiddle\": {\n\t\t\t\t\t\t\"className\": \"sap.ui.core.Fragment\",\n\t\t\t\t\t\t\"fragmentName\": \"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.maintain.GeneralDataEdit_extEditFormMiddleCustom\",\n\t\t\t\t\t\t\"type\": \"XML\"\n\t\t\t\t\t},\n\t\t\t\t\t\"extEditFormAddress\": {\n\t\t\t\t\t\t\"className\": \"sap.ui.core.Fragment\",\n\t\t\t\t\t\t\"fragmentName\": \"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.maintain.GeneralDataEdit_extEditFormAddressCustom\",\n\t\t\t\t\t\t\"type\": \"XML\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"sap.ui.viewModifications\": {\n\t\t\t\t\"cus.crm.myaccounts.view.search.SearchResult\": {\n\t\t\t\t\t\"contactColumn\": {\n\t\t\t\t\t\t\"visible\": false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});",
		"cus/crm/myaccounts/ZCRM_MYACC_EM2/util/formatter.js": "jQuery.sap.declare(\"cus.crm.myaccounts.ZCRM_MYACC_EM2.util.formatter\");\n\ncus.crm.myaccounts.ZCRM_MYACC_EM2.util.formatter = {\n\n\tformatSamplingStatus: function(status) {\n\t\tif (status !== \"\" && status !== null){\n\t\t\tvar that = this;\n\t\t\tthis.getModel().read(\"/ZCustomizingSampleStatusCollection('\" + status + \"')\", {\n\t\t\t\tsuccess: function _OnSuccess(oData, response) {\n\t\t\t\t\tthat.setText(oData.description);\n\t\t\t\t//\treturn oData.description;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\t\n\tformatAccIndStatus: function(status) {\n\t\tif (status !== \"\" && status !== null){\n\t\t\tvar that = this;\n\t\t\tthis.getModel().read(\"/ZCustomizingAccIndStatusCollection('\" + status + \"')\", {\n\t\t\t\tsuccess: function _OnSuccess(oData, response) {\n\t\t\t\t\tthat.setText(oData.zstatus);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n};\n\ncus.crm.myaccounts.ZCRM_MYACC_EM2.util.formatter.showModuleStatus = function(status) {\n\n\tif (status === 'A') //Active\n\t{\n\t\treturn cus.crm.myaccounts.util.Util.geti18NText(\"ZACTIVE\");\n\t} else if (status === 'I') //Inactive\n\t{\n\t\treturn cus.crm.myaccounts.util.Util.geti18NText(\"ZINACTIVE\");\n\t} else {\n\t\treturn \"-\";\n\t}\n\n};",
		"cus/crm/myaccounts/ZCRM_MYACC_EM2/view/maintain/GeneralDataEditCustom.controller.js": "sap.ui.controller(\"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.maintain.GeneralDataEditCustom\", {\n\n\tonInit: function() {\n\t\t//Execute onInit for the base class BaseMasterController  \n\t\tsap.ca.scfld.md.controller.BaseFullscreenController.prototype.onInit.call(this);\n\n\t\tthis.getView().setModel(new sap.ui.model.json.JSONModel(), \"ZCustomizing\");\n\t\tthis._fillCustomizing();\n\t},\n\n\t_fillCustomizing: function() {\n\t\tvar that = this;\n\t\tthis.oDataModel.read(\"/ZCustomizingSampleStatusCollection\", {\n\t\t\tsuccess: function _OnSuccess(oData, response) {\n\t\t\t\tthat.getView().getModel(\"ZCustomizing\").setData({\n\t\t\t\t\tZSampleStatus: oData.results\n\t\t\t\t}, true);\n\t\t\t}\n\t\t});\n\t\tthis.oDataModel.read(\"/ZCustomizingAccIndStatusCollection\", {\n\t\t\tsuccess: function _OnSuccess(oData, response) {\n\t\t\t\tthat.getView().getModel(\"ZCustomizing\").setData({\n\t\t\t\t\tZAccIndStatus: oData.results\n\t\t\t\t}, true);\n\t\t\t}\n\t\t});\n\n\t\tthis.oDataModel.read(\"/ZCustomizingOtherFunctionCollection\", {\n\t\t\tsuccess: function _OnSuccess(oData, response) {\n\t\t\t\tthat.getView().getModel(\"ZCustomizing\").setData({\n\t\t\t\t\tZOtherFunction: oData.results\n\t\t\t\t}, true);\n\t\t\t}\n\t\t});\n\n\t\tthis.accountF4Template = new sap.m.StandardListItem({\n\t\t\ttitle: \"{fullName}\",\n\t\t\tdescription: \"{accountID}\",\n\t\t\tactive: true\n\t\t});\n\n\t},\n\n\t//------------------- RELATION EXTENSIONS--------------------//\n\textHookGetDependentCustomRelations: function() {\n\t\treturn ['ZCustomFields'];\n\n\t},\n\n\t//------------------ CUSTOM FUNCTIONS ---------------//\n\tonAccStatusFieldChanged: function(oEvent) {\n\t\tvar oSelectedItem = oEvent.getParameter(\"selectedItem\");\n\t\tif (oSelectedItem) {\n\t\t\tthis._setAccountStatus(oSelectedItem.getProperty('key'), oSelectedItem.getProperty('text'));\n\t\t}\n\t},\n\n\t_setAccountStatus: function(ID, desc) {\n\t\tvar statusIDInput = this.getView().byId(\"ZCustomFields.zaccStatusInput\");\n\t\tif (statusIDInput)\n\t\t\tstatusIDInput.setValue(ID);\n\t\tvar statusInput = this.getView().byId(\"ZCustomFields.zaccStatusDescrInput\");\n\t\tif (statusInput)\n\t\t\tstatusInput.setValue(desc);\n\t},\n\n\t// ------------------ Account Type help search\t-----------------------------//\n\n\t_setAccountType: function(typeID, type) {\n\t\tvar typeInput = this.getView().byId(\"ZCustomFields.zdescriptionInput\");\n\t\tif (typeInput)\n\t\t\ttypeInput.setValue(type);\n\t\tvar typeIDInput = this.getView().byId(\"ZCustomFields.ztypeIDInput\");\n\t\tif (typeIDInput)\n\t\t\ttypeIDInput.setValue(typeID);\n\t},\n\t_setAccountSubtype: function(typeID, type) {\n\t\tvar typeInput = this.getView().byId(\"ZCustomFields.zsubDescriptionInput\");\n\t\tif (typeInput)\n\t\t\ttypeInput.setValue(type);\n\t\tvar typeIDInput = this.getView().byId(\"ZCustomFields.zsubtypeIDInput\");\n\t\tif (typeIDInput)\n\t\t\ttypeIDInput.setValue(typeID);\n\t},\n\t_setAccount3type: function(typeID, type) {\n\t\tvar typeInput = this.getView().byId(\"ZCustomFields.zacc3rdtypeDescrInput\");\n\t\tif (typeInput)\n\t\t\ttypeInput.setValue(type);\n\t\tvar typeIDInput = this.getView().byId(\"ZCustomFields.zacc3rdtypeInput\");\n\t\tif (typeIDInput)\n\t\t\ttypeIDInput.setValue(typeID);\n\t},\n\tonAccountTypeValueHelpSelected: function() {\n\n\t\tif (!this.valueHelpAccountType) {\n\t\t\tthis.valueHelpAccountType = sap.ui.xmlfragment(\"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.maintain.ValueHelpAccountType\", this);\n\t\t\tthis.valueHelpAccountType.setModel(this.getView().getModel(\"i18n\"), \"i18n\");\n\t\t}\n\t\tvar that = this;\n\t\tvar oFilter = new sap.ui.model.Filter(\"zbuType\", sap.ui.model.FilterOperator.EQ, \"\");\n\t\t//\t\tvar oFilter2 = new sap.ui.model.Filter(\"zbuType\", sap.ui.model.FilterOperator.EQ, \"\" );\n\t\tvar Filters = [];\n\t\tif (this.getView().getBindingContext().getObject().category === this.getView().getModel(\"constants\").getData().accountCategoryPerson) {\n\t\t\toFilter = new sap.ui.model.Filter(\"zbuType\", sap.ui.model.FilterOperator.EQ, this.getView().getBindingContext().getObject().category);\n\t\t\tFilters.push(oFilter);\n\t\t} else {\n\t\t\toFilter = new sap.ui.model.Filter(\"zbuType\", sap.ui.model.FilterOperator.EQ, this.getView().getBindingContext().getObject().category);\n\t\t\tFilters.push(oFilter);\n\t\t\t//\t\t\toFilter2 = new sap.ui.model.Filter(\"zbuType\", sap.ui.model.FilterOperator.EQ, this.getView().getModel(\"constants\").getData().accountCategoryPerson );\n\t\t\t//\t\t\tFilters.push(oFilter2);\n\t\t}\n\t\tthis.oDataModel.read(\"/ZCustomizingAccountTypeCollection\", {\n\t\t\tfilters: Filters,\n\t\t\tsuccess: function _OnSuccess(oData, response) {\n\t\t\t\tvar oAccTypeModel = new sap.ui.model.json.JSONModel();\n\t\t\t\toAccTypeModel.setData(oData);\n\t\t\t\tthat.valueHelpAccountType.setModel(oAccTypeModel, \"AccountTypeModel\");\n\t\t\t}\n\t\t});\n\t\tthis.valueHelpAccountType.open();\n\t},\n\n\tonAccountTypeValueHelpClose: function(oEvent) {\n\t\tvar oSelectedItem = oEvent.getParameter(\"selectedItem\");\n\t\tif (oSelectedItem) {\n\t\t\t//\t\t\tvar oSelectedObject = oSelectedItem.getBindingContext().getObject();\n\t\t\tthis._setAccountType(oSelectedItem.getCustomData()[0].getProperty(\"value\"), oSelectedItem.getProperty(\"title\"));\n\t\t\tif (this.valueHelpAccountSubtype) {\n\t\t\t\tvar that = this;\n\t\t\t\tthis.oDataModel.read(\"/ZCustomizingSubtypeCollection\", {\n\t\t\t\t\tfilters: [new sap.ui.model.Filter(\"ztypeID\", sap.ui.model.FilterOperator.EQ, this.getView().byId(\"ZCustomFields.ztypeIDInput\").getValue())],\n\t\t\t\t\tsuccess: function _OnSuccess(oData, response) {\n\t\t\t\t\t\tvar oSubTypeModel = new sap.ui.model.json.JSONModel();\n\t\t\t\t\t\toSubTypeModel.setData(oData);\n\t\t\t\t\t\tthat.valueHelpAccountSubtype.setModel(oSubTypeModel, \"SubTypeModel\");\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t}\n\t\tif (oEvent.getSource().getBinding(\"items\").aFilters.length) {\n\t\t\toEvent.getSource().destroyItems();\n\t\t\tthis.valueHelpAccountType.setModel(null);\n\t\t}\n\t\tthis._setAccountSubtype(null, null);\n\t\tthis._setAccount3type(null, null);\n\t},\n\n\tonAccountTypeValueHelpSearch: function(oEvent) {\n\t\tvar searchValue = oEvent.getParameter(\"value\");\n\t\tvar oFilter = new sap.ui.model.Filter(\"zdescription\", sap.ui.model.FilterOperator.Contains, searchValue);\n\t\toEvent.getSource().getBinding(\"items\").filter([oFilter]);\n\t},\n\n\tonAccountTypeValueHelpCancel: function(oEvent) {\n\t\tif (oEvent.getSource().getBinding(\"items\").aFilters.length) {\n\t\t\toEvent.getSource().destroyItems();\n\t\t\tthis.valueHelpAccountType.setModel(null);\n\t\t}\n\t},\n\n\t//------------------- Account subtype value help\t-----------------------//\n\n\tonAccountSubtypeValueHelpSelected: function() {\n\n\t\tif (!this.valueHelpAccountSubtype) {\n\t\t\tthis.valueHelpAccountSubtype = sap.ui.xmlfragment(\"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.maintain.ValueHelpAccountSubtype\",\n\t\t\t\tthis);\n\t\t\tthis.valueHelpAccountSubtype.setModel(this.getView().getModel(\"i18n\"), \"i18n\");\n\t\t\tvar that = this;\n\t\t\tthis.oDataModel.read(\"/ZCustomizingSubtypeCollection\", {\n\t\t\t\tfilters: [new sap.ui.model.Filter(\"ztypeID\", sap.ui.model.FilterOperator.EQ, this.getView().byId(\"ZCustomFields.ztypeIDInput\").getValue())],\n\t\t\t\tsuccess: function _OnSuccess(oData, response) {\n\t\t\t\t\tvar oSubTypeModel = new sap.ui.model.json.JSONModel();\n\t\t\t\t\toSubTypeModel.setData(oData);\n\t\t\t\t\tthat.valueHelpAccountSubtype.setModel(oSubTypeModel, \"SubTypeModel\");\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tthis.valueHelpAccountSubtype.setModel(this.oDataModel);\n\t\t}\n\t\tthis.valueHelpAccountSubtype.open();\n\t},\n\n\tonAccountSubtypeValueHelpClose: function(oEvent) {\n\t\tvar oSelectedItem = oEvent.getParameter(\"selectedItem\");\n\t\tif (oSelectedItem) {\n\t\t\tvar oSelectedObject = this.valueHelpAccountSubtype.getModel(\"SubTypeModel\").getProperty(oSelectedItem.getBindingContextPath());\n\t\t\tthis._setAccountSubtype(oSelectedObject.zsubtypeID, oSelectedObject.zdescription);\n\t\t\tif (this.valueHelpAccount3type) {\n\n\t\t\t\tvar that = this;\n\t\t\t\tthis.oDataModel.read(\"/ZCustomizingThirdTypeCollection\", {\n\t\t\t\t\tfilters: [new sap.ui.model.Filter(\"zsubtypeID\", sap.ui.model.FilterOperator.EQ, this.getView().byId(\n\t\t\t\t\t\t\"ZCustomFields.zsubtypeIDInput\").getValue())],\n\t\t\t\t\tsuccess: function _OnSuccess(oData, response) {\n\t\t\t\t\t\tvar oThirdTypeModel = new sap.ui.model.json.JSONModel();\n\t\t\t\t\t\toThirdTypeModel.setData(oData);\n\t\t\t\t\t\tthat.valueHelpAccount3type.setModel(oThirdTypeModel, \"ThirdTypeModel\");\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}\n\t\t}\n\t\tif (oEvent.getSource().getBinding(\"items\").aFilters.length) {\n\t\t\toEvent.getSource().destroyItems();\n\t\t\tthis.valueHelpAccountSubtype.setModel(null);\n\t\t}\n\t\tthis._setAccount3type(null, null);\n\t},\n\n\tonAccountSubtypeValueHelpSearch: function(oEvent) {\n\t\tvar searchValue = oEvent.getParameter(\"value\");\n\t\tvar oFilter = new sap.ui.model.Filter(\"zdescription\", sap.ui.model.FilterOperator.Contains, searchValue);\n\t\toEvent.getSource().getBinding(\"items\").filter([oFilter]);\n\t},\n\n\tonAccountSubtypeValueHelpCancel: function(oEvent) {\n\t\tif (oEvent.getSource().getBinding(\"items\").aFilters.length) {\n\t\t\toEvent.getSource().destroyItems();\n\t\t\tthis.valueHelpAccountSubtype.setModel(null);\n\t\t}\n\t},\n\n\t// -------------- Account thrid type value help\t-------------------//\t\n\n\tonAccount3typeValueHelpSelected: function() {\n\n\t\tif (!this.valueHelpAccount3type) {\n\t\t\tthis.valueHelpAccount3type = sap.ui.xmlfragment(\"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.maintain.ValueHelpAccount3Type\", this);\n\t\t\tthis.valueHelpAccount3type.setModel(this.getView().getModel(\"i18n\"), \"i18n\");\n\t\t\tvar that = this;\n\t\t\tthis.oDataModel.read(\"/ZCustomizingThirdTypeCollection\", {\n\t\t\t\tfilters: [new sap.ui.model.Filter(\"zsubtypeID\", sap.ui.model.FilterOperator.EQ, this.getView().byId(\n\t\t\t\t\t\"ZCustomFields.zsubtypeIDInput\").getValue())],\n\t\t\t\tsuccess: function _OnSuccess(oData, response) {\n\t\t\t\t\tvar oThirdTypeModel = new sap.ui.model.json.JSONModel();\n\t\t\t\t\toThirdTypeModel.setData(oData);\n\t\t\t\t\tthat.valueHelpAccount3type.setModel(oThirdTypeModel, \"ThirdTypeModel\");\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tthis.valueHelpAccount3type.setModel(this.oDataModel);\n\t\t}\n\t\tthis.valueHelpAccount3type.open();\n\t},\n\n\tonAccount3typeValueHelpClose: function(oEvent) {\n\t\tvar oSelectedItem = oEvent.getParameter(\"selectedItem\");\n\t\tif (oSelectedItem) {\n\t\t\tvar oSelectedObject = this.valueHelpAccount3type.getModel(\"ThirdTypeModel\").getProperty(oSelectedItem.getBindingContextPath());\n\t\t\tthis._setAccount3type(oSelectedObject.zacc3rdtypeID, oSelectedObject.zacc3rdtype);\n\t\t}\n\t\tif (oEvent.getSource().getBinding(\"items\").aFilters.length) {\n\t\t\toEvent.getSource().destroyItems();\n\t\t\tthis.valueHelpAccount3type.setModel(null);\n\t\t}\n\t},\n\n\tonAccount3typeValueHelpSearch: function(oEvent) {\n\t\tvar searchValue = oEvent.getParameter(\"value\");\n\t\tvar oFilter = new sap.ui.model.Filter(\"zacc3rdtype\", sap.ui.model.FilterOperator.Contains, searchValue);\n\t\toEvent.getSource().getBinding(\"items\").filter([oFilter]);\n\t},\n\n\tonAccount3typeValueHelpCancel: function(oEvent) {\n\t\tif (oEvent.getSource().getBinding(\"items\").aFilters.length) {\n\t\t\toEvent.getSource().destroyItems();\n\t\t\tthis.valueHelpAccountSubtype.setModel(null);\n\t\t}\n\t},\n\n\tonTerritoryValueHelpSelected: function(oEvent) {\n\t\tif (!this.valueHelpZTerritory) {\n\t\t\tthis.valueHelpZTerritory = sap.ui.xmlfragment(\"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.maintain.ValueHelpTerritory\", this);\n\t\t\tthis.valueHelpZTerritory.setModel(this.getView().getModel(\"i18n\"), \"i18n\");\n\t\t}\n\t\tvar that = this;\n\t\tthis.oDataModel.read(\"/ZCustomizingTerritorySet\", {\n\t\t\tfilters: [new sap.ui.model.Filter(\"partner\", sap.ui.model.FilterOperator.EQ, this.getView().getBindingContext().getObject().accountID)],\n\t\t\tsuccess: function _OnSuccess(oData, response) {\n\t\t\t\tvar oTerritoryModel = new sap.ui.model.json.JSONModel();\n\t\t\t\toTerritoryModel.setData(oData);\n\t\t\t\tthat.valueHelpZTerritory.setModel(oTerritoryModel, \"TerritoryModel\");\n\t\t\t}\n\t\t});\n\t\tthis.valueHelpZTerritory.open();\n\n\t},\n\n\tonTerritoryValueHelpClose: function(oEvent) {\n\t\tvar oSelectedItem = oEvent.getParameter(\"selectedItem\");\n\t\tif (oSelectedItem) {\n\t\t\tthis.byId(\"ZCustomFields.zTerritoryDescInput\").setValue(oSelectedItem.getProperty(\"title\"));\n\t\t\tthis.byId(\"ZCustomFields.zTerritoryInput\").setValue(oSelectedItem.getProperty(\"info\"));\n\t\t}\n\t},\n\n\tshowAccountF4: function(oEvent) {\n\n\t\tif (!this._accountSelectDialog) {\n\t\t\tthis._accountSelectDialog = new sap.ui.xmlfragment(\"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.maintain.ValueHelpDepartment\", this);\n\t\t\tthis._accountSelectDialog.setModel(this.getView().getModel());\n\t\t\tthis._accountSelectDialog.setModel(this.getView().getModel(\"i18n\"), \"i18n\");\n\t\t\tthis._accountSelectDialog.getAggregation('_dialog').getSubHeader().getContentMiddle()[0].setPlaceholder(sap.ca.scfld.md.app.Application\n\t\t\t\t.getImpl().getResourceBundle().getText(\"SEARCH\"));\n\t\t\tthis._accountSelectDialog.getAggregation('_dialog').getContent()[1].setGrowingScrollToLoad(true);\n\t\t\t//need to check again\n\t\t\tthis._accountSelectDialog.getAggregation('_dialog').getContent()[1].setGrowingThreshold(20);\n\n\t\t\t/*\t\t\t\t\tsap.ca.scfld.md.app.Application.getImpl().getConnectionManager().getModel().attachRequestSent(\n\t\t\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\t\t\tif (this._list) {\n\t\t\t\t\t\t\t\t\t\t\t\tthis._list.setNoDataText(this.getModel(\"i18n\").getResourceBundle().getText(\"LOADING_TEXT\"));\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t, this._accountSelectDialog);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tsap.ca.scfld.md.app.Application.getImpl().getConnectionManager().getModel().attachRequestCompleted(\n\t\t\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\t\t\tif (this._list) {\n\t\t\t\t\t\t\t\t\t\t\t\tthis._list.setNoDataText(this.getModel(\"i18n\").getResourceBundle().getText(\"NO_DATA_TEXT\"));\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t, this._accountSelectDialog);*/\n\n\t\t\tthis._accountSelectDialog.getAggregation('_dialog').setVerticalScrolling(true);\n\t\t}\n\n\t\tthis._accountSelectDialog.getModel().attachRequestCompleted(null, this._setAccountF4Text, this);\n\n\t\tvar aFilters = [];\n\n\t\taFilters.push(new sap.ui.model.Filter(\"zIsDepartment\", sap.ui.model.FilterOperator.EQ, true));\n\n\t\tthis._accountSelectDialog.getAggregation('_dialog').getContent()[1].bindAggregation(\"items\", {\n\t\t\tpath: \"/AccountCollection\",\n\t\t\tparameters: {\n\t\t\t\t//\t\t  expand : \"MainAddress\",\n\t\t\t\tselect: \"accountID,fullName\"\n\t\t\t},\n\t\t\tfilters: aFilters,\n\t\t\ttemplate: this.accountF4Template\n\n\t\t});\n\t\tthis._accountSelectDialog.open();\n\t},\n\n\tcloseAccountF4: function(oEvent) {\n\t\tthis.byId('dialogAccountF4').close();\n\t\tthis.accountf4open = \"\";\n\t},\n\n\tsetAccount: function(oEvent) {\n\t\tvar selectedItem = oEvent.getParameter(\"selectedItem\");\n\t\tvar accountName = selectedItem.getProperty(\"title\");\n\t\tvar accountId = selectedItem.getProperty(\"description\");\n\t\tthis.byId(\"ZCustomFields.zDepartmentDescInput\").setValue(accountName);\n\t\tthis.byId(\"ZCustomFields.zDepartmentInput\").setValue(accountId);\n\t},\n\n\tsearchAccount: function(oEvent) {\n\n\t\tvar sValue = oEvent.getParameter(\"value\");\n\t\tvar aFilters = [];\n\n\t\tif (sValue !== \"\") {\n\n\t\t\tvar filterName = \"fullName\";\n\t\t\taFilters.push(new sap.ui.model.Filter(filterName, sap.ui.model.FilterOperator.Contains, sValue));\n\t\t}\n\t\taFilters.push(new sap.ui.model.Filter(\"zIsDepartment\", sap.ui.model.FilterOperator.EQ, true));\n\t\tvar itemsBinding = oEvent.getParameter(\"itemsBinding\");\n\n\t\tif (itemsBinding) {\n\t\t\titemsBinding.aApplicationFilters = [];\n\t\t\titemsBinding.filter(aFilters);\n\t\t}\n\t},\n\n\t// ------------------ FUNCTION REDEFINITION --------------------//\n\n\t_readCustomizing: function(callbackCustomizingRead) {\n\t\tvar that = this;\n\t\tvar fnAfterRead = function(oResponses) {\n\n\t\t\tvar aAcademicTitles = oResponses[\"CustomizingAcademicTitleCollection\"];\n\t\t\tif (aAcademicTitles) {\n\t\t\t\taAcademicTitles.unshift({\n\t\t\t\t\ttitle: \"\",\n\t\t\t\t\ttitleDescription: \"\"\n\t\t\t\t});\n\t\t\t\tthat.customizingModel.setProperty(\"/AcademicTitleCustomizing\", aAcademicTitles);\n\t\t\t}\n\n\t\t\tvar aTitles = oResponses[\"CustomizingTitleCollection\"];\n\t\t\tif (aTitles) {\n\t\t\t\taTitles.unshift({\n\t\t\t\t\ttitle: \"\",\n\t\t\t\t\ttitleDescription: \"\",\n\t\t\t\t\tperson: \"X\",\n\t\t\t\t\torganization: \"X\",\n\t\t\t\t\tgroup: \"X\"\n\t\t\t\t});\n\t\t\t\tthat.customizingModel.setProperty(\"/TitleCustomizing\", aTitles);\n\t\t\t}\n\n\t\t\tvar aRatings = oResponses[\"CustomizingRatingCollection\"];\n\t\t\tif (aRatings) {\n\t\t\t\taRatings.unshift({\n\t\t\t\t\tratingID: \"\",\n\t\t\t\t\tratingText: \"\"\n\t\t\t\t});\n\t\t\t\tthat.customizingModel.setProperty(\"/RatingCustomizing\", aRatings);\n\t\t\t}\n\n\t\t\tvar oDefaultEmployeeResponsible = oResponses[\"EmployeeCollection?$filter=isDefaultEmployee%20eq%20true\"][0];\n\t\t\tif (oDefaultEmployeeResponsible)\n\t\t\t\tthat.customizingModel.setProperty(\"/DefaultEmployeeResponsible\", oDefaultEmployeeResponsible);\n\t\t\telse\n\t\t\t\tthat.customizingModel.setProperty(\"/DefaultEmployeeResponsible\", {\n\t\t\t\t\tfullName: \"\",\n\t\t\t\t\temployeeID: \"\"\n\t\t\t\t});\n\n\t\t\tif (callbackCustomizingRead)\n\t\t\t\tcallbackCustomizingRead.call(that);\n\n\t\t};\n\n\t\tcus.crm.myaccounts.util.Util.sendBatchReadRequests(this.oDataModel, [\"CustomizingTitleCollection\",\n\t\t\t\"CustomizingAcademicTitleCollection\", \"CustomizingRatingCollection\", \"EmployeeCollection?$filter=isDefaultEmployee%20eq%20true\"\n\t\t], fnAfterRead, fnAfterRead);\n\n\t\t//-------------------  CUSTOM CODING: additional settings for Accountstatus Customizing ------------------//\n\t\tvar statusSelect = this.getView().byId(\"ZCustomFields.zaccStatusDescrSelect\");\n\t\tif (statusSelect) {\n\t\t\tthat = this;\n\t\t\tthis.oDataModel.read(\"/ZCustomizingAccStatusCollection\", {\n\t\t\t\tsuccess: function _OnSuccess(oData, response) {\n\t\t\t\t\tvar oAccStatusModel = new sap.ui.model.json.JSONModel();\n\t\t\t\t\toAccStatusModel.setData(oData);\n\t\t\t\t\tthat.getView().byId(\"ZCustomFields.zaccStatusDescrSelect\").setModel(oAccStatusModel, \"CustAccountStatus\");\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t//--------------------- END OF CUSTOM CODING ------------------//\t    \n\t},\n\n\t// Redefined Functions //\t\n\n\tonSaveButtonPressed: function() {\n\t\tvar ctx1 = this.getView().getBindingContext().getObject().accountID;\n\t\tvar that = this;\n\t\tvar oModel = this.getView().getModel();\n\t\tif (ctx1 !== \"\") {\n\t\t\toModel.read(\"EditAuthorizationCheck\", null, {\n\t\t\t\tObjectID: oModel.formatValue(ctx1, \"Edm.String\")\n\t\t\t}, false, function(oData, resp) {\n\t\t\t\tif (oData.EditAuthorizationCheck.ActionSuccessful === \"X\") {\n\t\t\t\t\tthat._saveData(false);\n\t\t\t\t} else {\n\t\t\t\t\tvar those = that;\n\t\t\t\t\tvar fnClose = function() {\n\t\t\t\t\t\tthose.oRouter.navTo(\"detail\", {\n\t\t\t\t\t\t\tcontextPath: \"AccountCollection('\" + ctx1 + \"')\"\n\t\t\t\t\t\t}, true);\n\t\t\t\t\t};\n\t\t\t\t\tsap.ca.ui.message.showMessageBox({\n\t\t\t\t\t\ttype: sap.ca.ui.message.Type.ERROR,\n\t\t\t\t\t\tmessage: oData.EditAuthorizationCheck.Message,\n\t\t\t\t\t\tdetails: null\n\t\t\t\t\t}, fnClose);\n\t\t\t\t}\n\t\t\t}, null);\n\t\t} else {\n\t\t\tthat._saveData(false);\n\t\t}\n\t},\n\n\t_checkSavePossible: function() {\n\t\tvar inputField, countryID, country, regionID, region, employeeID, employee, url;\n\n\t\tinputField = this.byId(sap.ui.core.Fragment.createId(this.addressFragment, \"MainAddress.countryIDInput\"));\n\t\tif (inputField)\n\t\t\tcountryID = inputField.getValue();\n\n\t\tinputField = this.byId(sap.ui.core.Fragment.createId(this.addressFragment, \"MainAddress.countryInput\"));\n\t\tif (inputField)\n\t\t\tcountry = inputField.getValue();\n\n\t\tif (country && !countryID) {\n\t\t\tsap.m.MessageBox.alert(cus.crm.myaccounts.util.Util.geti18NText1(\"MSG_WRONG_COUNTRY_ERROR\", country));\n\t\t\treturn false;\n\t\t}\n\n\t\tinputField = this.byId(sap.ui.core.Fragment.createId(this.addressFragment, \"MainAddress.regionIDInput\"));\n\t\tif (inputField)\n\t\t\tregionID = inputField.getValue();\n\n\t\tinputField = this.byId(sap.ui.core.Fragment.createId(this.addressFragment, \"MainAddress.regionInput\"));\n\t\tif (inputField)\n\t\t\tregion = inputField.getValue();\n\n\t\tif (region && !regionID) {\n\t\t\tsap.m.MessageBox.alert(cus.crm.myaccounts.util.Util.geti18NText1(\"MSG_WRONG_REGION_ERROR\", region));\n\t\t\treturn false;\n\t\t}\n\n\t\tinputField = this.getView().byId(\"EmployeeResponsibleRel.account2IDInput\");\n\t\tif (inputField)\n\t\t\temployeeID = inputField.getValue();\n\n\t\tinputField = this.getView().byId(\"EmployeeResponsibleRel.account2FullNameInput\");\n\t\tif (inputField)\n\t\t\temployee = inputField.getValue();\n\n\t\tif (employee && !employeeID) {\n\t\t\tsap.m.MessageBox.alert(cus.crm.myaccounts.util.Util.geti18NText1(\"MSG_WRONG_EMPLOYEE_ERROR\", employee));\n\t\t\treturn false;\n\t\t}\n\n\t\tinputField = this.byId(sap.ui.core.Fragment.createId(this.addressFragment, \"MainAddress.websiteInput\"));\n\t\tif (inputField) {\n\t\t\turl = inputField.getValue();\n\t\t\tif (!jQuery.sap.validateUrl(url)) {\n\t\t\t\tsap.m.MessageBox.alert(cus.crm.myaccounts.util.Util.geti18NText1(\"MSG_WRONG_URL_ERROR\", url));\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t}\n\n\t\t//Check if all mandatory fields are filled\n\t\tvar isMandatoryFieldsFilled = true;\n\t\tvar oAccount = this.getView().getBindingContext().getObject();\n\t\tif (oAccount.category === cus.crm.myaccounts.util.Constants.accountCategoryPerson) {\n\t\t\tif (this.byId(sap.ui.core.Fragment.createId(\"personFragment\", \"name1Input\")).getValue().length === 0) {\n\t\t\t\tthis.byId(sap.ui.core.Fragment.createId(\"personFragment\", \"name1Input\")).setValueState(sap.ui.core.ValueState.Error);\n\t\t\t\tisMandatoryFieldsFilled = false;\n\t\t\t}\n\t\t\tif (this.byId(sap.ui.core.Fragment.createId(this.addressFragment, \"MainAddress.countryInput\")).getValue().length === 0) {\n\t\t\t\tthis.byId(sap.ui.core.Fragment.createId(this.addressFragment, \"MainAddress.countryInput\")).setValueState(sap.ui.core.ValueState.Error);\n\t\t\t\tisMandatoryFieldsFilled = false;\n\t\t\t}\n\t\t\tif (this.byId(sap.ui.core.Fragment.createId(this.addressFragment, \"MainAddress.emailInput\")).getValue().length === 0) {\n\t\t\t\tthis.byId(sap.ui.core.Fragment.createId(this.addressFragment, \"MainAddress.emailInput\")).setValueState(sap.ui.core.ValueState.Error);\n\t\t\t\tisMandatoryFieldsFilled = false;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.byId(sap.ui.core.Fragment.createId(\"companyFragment\", \"name1Input\")).getValue().length === 0) {\n\t\t\t\tthis.byId(sap.ui.core.Fragment.createId(\"companyFragment\", \"name1Input\")).setValueState(sap.ui.core.ValueState.Error);\n\t\t\t\tisMandatoryFieldsFilled = false;\n\t\t\t}\n\t\t}\n\n\t\tif (!isMandatoryFieldsFilled)\n\t\t\tsap.m.MessageBox.alert(cus.crm.myaccounts.util.Util.geti18NText(\"MSG_MANDATORY_FIELDS\"));\n\n\t\treturn isMandatoryFieldsFilled;\n\n\t},\n\n\t_cleanUp: function() {\n\t\tthis.getView().setModel(null);\n\t\tthis.setBtnEnabled(\"saveButton\", true);\n\t\tthis.byId(this.getView().getId() + \"--addressFragment--MainAddress.emailLabel\").setRequired(true);\n\n\t},\n\n\t_setEmptyScreen: function(accountCategory) {\n\t\tvar oAccountTemplate = this._getTemplateForAccount(accountCategory);\n\n\t\tvar aDependentRelations = this._getDependentRelations();\n\t\tfor (var i in aDependentRelations) {\n\t\t\toAccountTemplate[aDependentRelations[i]] = this._getTemplateForDependentObject(aDependentRelations[i]);\n\t\t}\n\n\t\tvar oNewAccountModel = new sap.ui.model.json.JSONModel({\n\t\t\tNewAccount: oAccountTemplate\n\t\t});\n\t\toNewAccountModel.setDefaultBindingMode(sap.ui.model.BindingMode.OneWay); //to be similar to oData model\n\t\tthis.getView().setModel(oNewAccountModel);\n\t\tthis.getView().setBindingContext(oNewAccountModel.getContext(\"/NewAccount\"));\n\t\tthis._setDefaultEmployeeResponsible();\n\t\tthis._setDefaultValues(accountCategory);\n\t},\n\n\t_setDefaultValues: function(accountCategory) {\n\t\t//Status for individual account\n\t\tthis.byId(\"zAccountStatusInput\").setSelectedKey(\"01\");\n\t\t//Status for coorporate account\n\t\tif (accountCategory === \"2\") {\n\t\t\tthis.byId(\"ZCustomFields.zaccStatusDescrSelect\").setSelectedKey(\"01\");\n\t\t}\n\t\tthis.byId(\"zSamplingStatusInput\").setSelectedKey(\"03\");\n\t\tvar oCountryLabel = this.byId(sap.ui.core.Fragment.createId(this.addressFragment, \"MainAddress.countryLabel\"));\n\t\toCountryLabel.setRequired(true);\n\n\t\tvar that = this;\n\t\tif (accountCategory === cus.crm.myaccounts.util.Constants.accountCategoryPerson) {\n\t\t\tthis.oDataModel.read(\"/ZCustomizingAccountTypeCollection\", {\n\t\t\t\tsuccess: function _OnSuccess(oData, response) {\n\t\t\t\t\tvar result = $.grep(oData.results, function(e) {\n\t\t\t\t\t\treturn e.ztypeID === \"10001\";\n\t\t\t\t\t});\n\t\t\t\t\tif (result.length === 1) {\n\t\t\t\t\t\tthat.byId(\"ZCustomFields.ztypeIDInput\").setValue(result[0].ztypeID);\n\t\t\t\t\t\tthat.byId(\"ZCustomFields.zdescriptionInput\").setValue(result[0].zdescription);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\tonCountryValueHelpClose: function(oEvent) {\n\t\tvar oSelectedItem = oEvent.getParameter(\"selectedItem\");\n\t\tif (oSelectedItem) {\n\t\t\t/*\n\t\t\t * Set value state to none \n\t\t\t */\n\t\t\tvar oInput = this.byId(sap.ui.core.Fragment.createId(this.addressFragment, \"MainAddress.countryInput\"));\n\t\t\toInput.setValueState(sap.ui.core.ValueState.None);\n\n\t\t\tvar oSelectedObject = oSelectedItem.getBindingContext().getObject();\n\t\t\tthis._setCountry(oSelectedObject.countryID, oSelectedObject.country);\n\t\t}\n\t\toEvent.getSource().getBinding(\"items\").filter([]);\n\t},\n\n\tonCountryInputFieldChanged: function(oEvent) {\n\t\tthis.onInputFieldChanged(oEvent);\n\t\tvar countryInput = oEvent.getSource();\n\t\tthis._setCountry(\"\", countryInput.getValue());\n\n\t\tvar fnCheckCountry = function() {\n\t\t\tvar oModel = this.valueHelpCountry.getModel();\n\t\t\tvar aCountries = oModel.getProperty(\"/CountryCustomizing\");\n\t\t\tfor (var i = 0; i < aCountries.length; i++) {\n\t\t\t\tvar oCountry = aCountries[i];\n\t\t\t\tif (oCountry.country.toUpperCase() === countryInput.getValue().toUpperCase())\n\t\t\t\t\tthis._setCountry(oCountry.countryID, countryInput.getValue());\n\t\t\t}\n\t\t};\n\t\tif (!this.valueHelpCountry) {\n\t\t\tthis._createValueHelpCountry();\n\t\t\tthis._readCountries(fnCheckCountry);\n\t\t} else {\n\t\t\tfnCheckCountry.call(this);\n\t\t}\n\t},\n\n\tonInputFieldChanged: function(oEvent) {\n\t\tvar oInput = oEvent.getSource();\n\t\t//Email OR Country\n\t\tif (oInput.getId().indexOf('email') !== -1 || oInput.getId().indexOf('country') !== -1) {\n\t\t\tif (oInput.getValue().length > 0) {\n\t\t\t\toInput.setValueState(sap.ui.core.ValueState.None);\n\t\t\t} else {\n\t\t\t\toInput.setValueState(sap.ui.core.ValueState.Error);\n\t\t\t}\n\t\t}\n\t}\n});",
		"cus/crm/myaccounts/ZCRM_MYACC_EM2/view/maintain/GeneralDataEdit_extEditFormAddressCustom.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" xmlns:layout=\"sap.ui.layout\"\n\txmlns:form=\"sap.ui.layout.form\" xmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<form:FormElement xmlns:form=\"sap.ui.layout.form\" id=\"MainAddress.zRoomNumber\"\n\tvisible=\"{parts:['category', 'constants>/accountCategoryPerson'], formatter: 'cus.crm.myaccounts.util.formatter.isEqual'}\">\n\t\t<form:label>\n\t\t\t<Label  id=\"MainAddress.zRoomNumberLabel\" text=\"{i18n&gt;ZACCOUNT_ROOM}\"/>\n\t\t</form:label>\n\t\t<form:fields>\n\t\t\t<Input id=\"addressFragment--MainAddress.zRoomNumberInput\" value=\"{MainAddress/zRoomNumber}\" liveChange=\"onInputFieldChanged\"/>\n\t\t</form:fields>\n\t</form:FormElement>\n\t\t<form:FormElement xmlns:form=\"sap.ui.layout.form\" id=\"MainAddress.zBuilding\"\n\t\tvisible=\"{parts:['category', 'constants>/accountCategoryPerson'], formatter: 'cus.crm.myaccounts.util.formatter.isEqual'}\">\n\t\t<form:label>\n\t\t\t<Label  id=\"MainAddress.zBuildingLabel\" text=\"{i18n&gt;ZACCOUNT_BUILDING}\"/>\n\t\t</form:label>\n\t\t<form:fields>\n\t\t\t<Input id=\"addressFragment--MainAddress.zBuildingInput\" value=\"{MainAddress/zBuilding}\" liveChange=\"onInputFieldChanged\"/>\n\t\t</form:fields>\n\t</form:FormElement>\n</core:FragmentDefinition>",
		"cus/crm/myaccounts/ZCRM_MYACC_EM2/view/maintain/ValueHelpTerritory.fragment.xml": "<!--\r\n\r\n    CUSTOM DEVELOPMENT\r\n\r\n-->\r\n<core:FragmentDefinition\r\n  xmlns=\"sap.m\"\r\n  xmlns:core=\"sap.ui.core\"\r\n  xmlns:layout=\"sap.ui.layout\">\r\n  \r\n  <SelectDialog\r\n  \ttitle=\"{i18n>ZTERRITORY}\"\r\n    class=\"sapUiPopupWithPadding\"\r\n    items=\"{TerritoryModel>/results}\"    \r\n    confirm=\"onTerritoryValueHelpClose\"\r\n    cancel=\"onTerritoryValueHelpCancel\">\r\n    <StandardListItem\r\n      title=\"{TerritoryModel>description}\"\r\n      info =\"{TerritoryModel>territory}\"\r\n      />\r\n  </SelectDialog>\r\n   \r\n</core:FragmentDefinition>",
		"cus/crm/myaccounts/ZCRM_MYACC_EM2/view/maintain/ValueHelpAccountType.fragment.xml": "<!--\r\n\r\n    CUSTOM DEVELOPMENT\r\n\r\n-->\r\n<core:FragmentDefinition\r\n  xmlns=\"sap.m\"\r\n  xmlns:core=\"sap.ui.core\"\r\n  xmlns:layout=\"sap.ui.layout\"\r\n  xmlns:app=\"http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1\">\r\n  \r\n  <SelectDialog\r\n  \ttitle=\"{i18n>ZACCOUNT_TYPE}\"\r\n    class=\"sapUiPopupWithPadding\"\r\n    items=\"{AccountTypeModel>/results}\"    \r\n    liveChange=\"onAccountTypeValueHelpSearch\"\r\n    confirm=\"onAccountTypeValueHelpClose\"\r\n    cancel=\"onAccountTypeValueHelpCancel\">\r\n    <StandardListItem\r\n      title=\"{AccountTypeModel>zdescription}\"\r\n      app:key=\"{AccountTypeModel>ztypeID}\"\r\n      />\r\n  </SelectDialog>\r\n   \r\n</core:FragmentDefinition>",
		"cus/crm/myaccounts/ZCRM_MYACC_EM2/view/maintain/ValueHelpDepartment.fragment.xml": "<!--\r\n\r\n    CUSTOM DEVELOPMENT\r\n\r\n-->\r\n<SelectDialog\r\n        xmlns=\"sap.m\"\r\n        xmlns:core=\"sap.ui.core\"\r\n      \r\n        title=\"{i18n>ZDEPARTMENT}\"\r\n        noDataText=\"{i18n>LOADING_TEXT}\"\r\n        multiSelect=\"\"\r\n        confirm=\"setAccount\"\r\n        search=\"searchAccount\"\r\n        liveChange=\"liveSearchAccount\" >\r\n         \r\n</SelectDialog>",
		"cus/crm/myaccounts/ZCRM_MYACC_EM2/view/maintain/ValueHelpAccount3Type.fragment.xml": "<!--\r\n\r\n    CUSTOM DEVELOPMENT\r\n\r\n-->\r\n<core:FragmentDefinition\r\n  xmlns=\"sap.m\"\r\n  xmlns:core=\"sap.ui.core\"\r\n  xmlns:layout=\"sap.ui.layout\">\r\n  \r\n  <SelectDialog\r\n  \ttitle=\"{i18n>ZACCOUNT_THIRDTYPE}\"\r\n    class=\"sapUiPopupWithPadding\"\r\n    items=\"{ThirdTypeModel>/results}\"\r\n    liveChange=\"onAccount3typeValueHelpSearch\"\r\n    confirm=\"onAccount3typeValueHelpClose\"\r\n    cancel=\"onAccount3typeValueHelpCancel\">\r\n    <StandardListItem\r\n        title=\"{ThirdTypeModel>zacc3rdtype}\" \r\n     />\r\n  </SelectDialog>\r\n   \r\n</core:FragmentDefinition>",
		"cus/crm/myaccounts/ZCRM_MYACC_EM2/view/maintain/ValueHelpAccountSubtype.fragment.xml": "<!--\r\n\r\n    CUSTOM DEVELOPMENT\r\n\r\n-->\r\n<core:FragmentDefinition\r\n  xmlns=\"sap.m\"\r\n  xmlns:core=\"sap.ui.core\"\r\n  xmlns:layout=\"sap.ui.layout\">\r\n  \r\n  <SelectDialog\r\n  \ttitle=\"{i18n>ZACCOUNT_SUBTYPE}\"\r\n    class=\"sapUiPopupWithPadding\"\r\n    items=\"{SubTypeModel>/results}\"\r\n    liveChange=\"onAccountSubtypeValueHelpSearch\"\r\n    confirm=\"onAccountSubtypeValueHelpClose\"\r\n    cancel=\"onAccountSubtypeValueHelpCancel\">\r\n    <StandardListItem\r\n        title=\"{SubTypeModel>zdescription}\"  \r\n     />\r\n  </SelectDialog>\r\n   \r\n</core:FragmentDefinition>",
		"cus/crm/myaccounts/ZCRM_MYACC_EM2/view/overview/ModulesCustom.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\n\tcontrollerName=\"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.overview.ModulesCustom\" xmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<Table id=\"list\" mode=\"{device>/listMode}\" growing=\"true\" growingThreshold=\"10\" growingScrollToLoad=\"false\" items=\"{ZModules}\">\n\t<!--select=\"onModuleClicked\">-->\n\t\t<columns>\n\t\t\t<Column id=\"moduleIDColumn\" width=\"16rem\" minScreenWidth=\"Small\" demandPopin=\"true\"><Label text=\"{i18n>ZMODULEID}\"/></Column>\n\t\t\t<Column id=\"moduleNameColumn\" width=\"16rem\" minScreenWidth=\"Medium\" demandPopin=\"true\"><Label text=\"{i18n>ZMODULE}\"/></Column>\n\t\t\t<Column id=\"uniModelNameColumn\" width=\"16rem\" minScreenWidth=\"Medium\" demandPopin=\"true\"><Label text=\"{i18n>ZUNIMODULE}\"/></Column>\n\t\t\t<Column id=\"enrollmentColumn\" width=\"16rem\" minScreenWidth=\"Medium\" demandPopin=\"true\"><Label text=\"{i18n>ZTOTAL_ENROLMENT}\"/></Column>\n\t\t\t<Column id=\"statusColumn\" width=\"16rem\" minScreenWidth=\"Medium\" demandPopin=\"true\"><Label text=\"{i18n>ZMODULESTATUS}\"/></Column>\n\t\n\t\t</columns>\n\t\t<items>\n\t\t\t<ColumnListItem id=\"columnListItem\">\n\t\t\t\t<cells>\n\t\t\t\t\t<Text text=\"{moduleID}\"/>\n\t\t\t\t\t<Link text=\"{moduleName}\" target=\"{moduleID}\" press=\"onModuleClicked\"/>\n\t\t\t\t\t<Text text=\"{uniModuleName}\"/>\n\t\t\t\t\t<Text text=\"{enrollment}\"/>\n\t\t\t\t\t<Text text=\"{path:'status', formatter: 'cus.crm.myaccounts.ZCRM_MYACC_EM2.util.formatter.showModuleStatus'}\"/>\n\n\t\t\t\t</cells>\n\t\t\t</ColumnListItem>\n\t\t</items>\n\t</Table>\n</mvc:View>",
		"cus/crm/myaccounts/ZCRM_MYACC_EM2/view/maintain/GeneralDataEdit_extEditFormMiddleCustom.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" xmlns:layout=\"sap.ui.layout\"\n\txmlns:form=\"sap.ui.layout.form\" xmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t\n\t<form:FormContainer xmlns:form=\"sap.ui.layout.form\" id=\"formAllKindsofAccount_info\">\n\t\t<form:formElements>\n\t\t\t<form:FormElement id=\"zterritory_form\">\n\t\t\t\t<form:label>\n\t\t\t\t\t<Label xmlns=\"sap.m\" id=\"zterritory_label\" text=\"{i18n&gt;ZTERRITORY}\"/>\n\t\t\t\t</form:label>\n\t\t\t\t<form:fields>\n\t\t\t\t\t<Input xmlns=\"sap.m\" id=\"ZCustomFields.zTerritoryDescInput\" value=\"{ZCustomFields/zTerritoryDesc}\" \n\t\t\t\t\tshowValueHelp=\"true\" valueHelpOnly=\"true\" type=\"Text\" valueHelpRequest=\"onTerritoryValueHelpSelected\"/>\n\t\t\t\t\t<Input xmlns=\"sap.m\" id=\"ZCustomFields.zTerritoryInput\" visible=\"false\" value=\"{ZCustomFields/zTerritory}\" \n\t\t\t\t\tshowValueHelp=\"true\" valueHelpOnly=\"true\" valueHelpRequest=\"onTerritoryValueHelpSelected\"/>\n\t\t\t\t</form:fields>\n\t\t\t</form:FormElement>\n\t\t\t<form:FormElement id=\"account_type_form\">\n\t\t\t\t<form:label>\n\t\t\t\t\t<Label xmlns=\"sap.m\" id=\"account_type_label\" text=\"{i18n&gt;ZACCOUNT_TYPE}\"/>\n\t\t\t\t</form:label>\n\t\t\t\t<form:fields>\n\t\t\t\t\t<Input id=\"ZCustomFields.zdescriptionInput\" value=\"{ZCustomFields/zdescription}\" type=\"Text\" placeholder=\"\" enabled=\"true\" editable=\"true\"\n\t\t\t\t\t\tshowValueHelp=\"true\" valueHelpOnly=\"false\" valueHelpRequest=\"onAccountTypeValueHelpSelected\" showSuggestion=\"true\"\n\t\t\t\t\t\tsuggestionItemSelected=\"onAccountTypeSuggestItemSelected\" liveChange=\"onAccountTypeInputFieldChanged\" visible=\"true\"/>\n\t\t\t\t</form:fields>\n\t\t\t</form:FormElement>\n\t\t\t<form:FormElement id=\"ZCustomFields.ztypeIDform\">\n\t\t\t\t<form:fields>\n\t\t\t\t\t<Input id=\"ZCustomFields.ztypeIDInput\" value=\"{ZCustomFields/ztypeID}\" type=\"Text\" visible=\"false\"/>\n\t\t\t\t</form:fields>\n\t\t\t</form:FormElement>\n\t\t\t<form:FormElement id=\"account_subtype_form\">\n\t\t\t\t<form:label>\n\t\t\t\t\t<Label xmlns=\"sap.m\" id=\"account_subtype_label\" text=\"{i18n&gt;ZACCOUNT_SUBTYPE}\"/>\n\t\t\t\t</form:label>\n\t\t\t\t<form:fields>\n\t\t\t\t\t<Input id=\"ZCustomFields.zsubDescriptionInput\" value=\"{ZCustomFields/zsubDescription}\" type=\"Text\" placeholder=\"\" enabled=\"true\" editable=\"true\"\n\t\t\t\t\t\tshowValueHelp=\"true\" valueHelpOnly=\"false\" valueHelpRequest=\"onAccountSubtypeValueHelpSelected\" showSuggestion=\"true\"\n\t\t\t\t\t\tsuggestionItemSelected=\"onAccountSubtypeSuggestItemSelected\" liveChange=\"onSubtypeTypeInputFieldChanged\" visible=\"true\"/>\n\t\t\t\t</form:fields>\n\t\t\t</form:FormElement>\n\t\t\t<form:FormElement id=\"ZCustomFields.zsubtypeIDform\">\n\t\t\t\t<form:fields>\n\t\t\t\t\t<Input id=\"ZCustomFields.zsubtypeIDInput\" value=\"{ZCustomFields/zsubtypeID}\" type=\"Text\" visible=\"false\"/>\n\t\t\t\t</form:fields>\n\t\t\t</form:FormElement>\n\t\t\t</form:formElements>\n\t</form:FormContainer>\n\n\t<form:FormContainer xmlns:form=\"sap.ui.layout.form\" id=\"formCorporate_info\"\n\t\tvisible=\"{parts:['category', 'constants>/accountCategoryPerson'], formatter: 'cus.crm.myaccounts.util.formatter.isUnequal'}\">\n\t\t<form:formElements>\n\t\t\t<form:FormElement id=\"account_3type_form\">\n\t\t\t\t<form:label>\n\t\t\t\t\t<Label xmlns=\"sap.m\" id=\"account_3type_label\" text=\"{i18n&gt;ZACCOUNT_THIRDTYPE}\"/>\n\t\t\t\t</form:label>\n\t\t\t\t<form:fields>\n\t\t\t\t\t<Input id=\"ZCustomFields.zacc3rdtypeDescrInput\" value=\"{ZCustomFields/zacc3rdtypeDescr}\" type=\"Text\" placeholder=\"\" enabled=\"true\" editable=\"true\"\n\t\t\t\t\t\tshowValueHelp=\"true\" valueHelpOnly=\"false\" valueHelpRequest=\"onAccount3typeValueHelpSelected\" showSuggestion=\"true\"\n\t\t\t\t\t\tsuggestionItemSelected=\"onAccount3typeSuggestItemSelected\" liveChange=\"on3typeTypeInputFieldChanged\" visible=\"true\"/>\n\t\t\t\t</form:fields>\n\t\t\t</form:FormElement>\n\t\t\t<form:FormElement id=\"ZCustomFields.zacc3rdtypeIDform\">\n\t\t\t\t<form:fields>\n\t\t\t\t\t<Input id=\"ZCustomFields.zacc3rdtypeInput\" value=\"{ZCustomFields/zacc3rdtype}\" type=\"Text\" visible=\"false\"/>\n\t\t\t\t</form:fields>\n\t\t\t</form:FormElement>\t\t\n\t\t\t<form:FormElement id=\"account_status_form\">\n\t\t\t\t<form:label>\n\t\t\t\t\t<Label xmlns=\"sap.m\" id=\"account_status_label\" text=\"{i18n&gt;ZACCOUNT_STATUS}\"/>\n\t\t\t\t</form:label>\n\t\t\t\t<form:fields>\n\t\t\t\t\t<Select id=\"ZCustomFields.zaccStatusDescrSelect\" change=\"onAccStatusFieldChanged\"\n\t\t\t\t\t\titems=\"{CustAccountStatus>/results}\" selectedKey=\"{ZCustomFields/zaccStatus}\" >\n\t\t\t\t\t\t<core:Item key=\"{CustAccountStatus>zstatusID}\" text=\"{CustAccountStatus>zstatus}\"/>\n\t\t\t\t\t</Select>\n\t\t\t\t</form:fields>\n\t\t\t</form:FormElement>\n\t\t\t<form:FormElement id=\"ZCustomFields.zaccstatusform\">\n\t\t\t\t<form:fields>\n\t\t\t\t\t<Input id=\"ZCustomFields.zaccStatusInput\" value=\"{ZCustomFields/zaccStatus}\" type=\"Text\" visible=\"false\"/>\n\t\t\t\t</form:fields>\n\t\t\t</form:FormElement>\n\t\t\t\n\t\t\t<form:FormElement id=\"account_insvariations_form\">\n\t\t\t\t<form:label>\n\t\t\t\t\t<Label xmlns=\"sap.m\" id=\"insvariations_label\" text=\"{i18n&gt;ZINS_VARIATIONS}\"/>\n\t\t\t\t</form:label>\n\t\t\t\t<form:fields>\n\t\t\t\t\t<Input id=\"ZCustomFields.zinsVariationsInput\" value=\"{ZCustomFields/zinsVariations}\" maxLength=\"40\" liveChange=\"onName1InputFieldChanged\"/>\n\t\t\t\t</form:fields>\n\t\t\t</form:FormElement>\n\t\t\t<form:FormElement id=\"enrollment_form\">\n\t\t\t\t<form:label>\n\t\t\t\t\t<Label xmlns=\"sap.m\" id=\"enrollment_label\" text=\"{i18n&gt;ZTOTAL_ENROLMENT}\"/>\n\t\t\t\t</form:label>\n\t\t\t\t<form:fields>\n\t\t\t\t\t<Input id=\"ZCustomFields.zenrollmentInput\" value=\"{ZCustomFields/zenrollment}\" maxLength=\"40\" liveChange=\"onName1InputFieldChanged\"/>\n\t\t\t\t</form:fields>\n\t\t\t</form:FormElement>\n\t\t</form:formElements>\n\t</form:FormContainer>\n\t\n\t<form:FormContainer xmlns:form=\"sap.ui.layout.form\" id=\"formIndividual_info\"\n\t\tvisible=\"{parts:['category', 'constants>/accountCategoryPerson'], formatter: 'cus.crm.myaccounts.util.formatter.isEqual'}\">\n\t\t<form:formElements>\n\t\t\t<form:FormElement id=\"account_sam_status_form\">\n\t\t\t\t<form:label>\n\t\t\t\t\t<Label xmlns=\"sap.m\" id=\"sampling_status_label\" text=\"{i18n&gt;ZSAMPLING_STATUS}\"/>\n\t\t\t\t</form:label>\n\t\t\t\t<form:fields>\n\t\t\t\t\t<Select id=\"zSamplingStatusInput\" \n\t\t\t\t\t\titems=\"{ZCustomizing>/ZSampleStatus}\" selectedKey=\"{zSamplingStatus}\" >\n\t\t\t\t\t\t<core:Item key=\"{ZCustomizing>status}\" text=\"{ZCustomizing>description}\"/>\n\t\t\t\t\t</Select>\n\t\t\t\t</form:fields>\n\t\t\t</form:FormElement>\n\t\t\t<form:FormElement id=\"account_ind_status_form\">\n\t\t\t\t<form:label>\n\t\t\t\t\t<Label xmlns=\"sap.m\" id=\"ind_status_label\" text=\"{i18n&gt;ZACCOUNT_STATUS}\"/>\n\t\t\t\t</form:label>\n\t\t\t\t<form:fields>\n\t\t\t\t\t<Select id=\"zAccountStatusInput\" \n\t\t\t\t\t\titems=\"{ZCustomizing>/ZAccIndStatus}\" selectedKey=\"{zAccountStatus}\" >\n\t\t\t\t\t\t<core:Item key=\"{ZCustomizing>zstatusID}\" text=\"{ZCustomizing>zstatus}\"/>\n\t\t\t\t\t</Select>\n\t\t\t\t</form:fields>\n\t\t\t</form:FormElement>\t\t\t\n\t\t\t<form:FormElement id=\"contact_source_form\">\n\t\t\t\t<form:label>\n\t\t\t\t\t<Label xmlns=\"sap.m\" id=\"contact_source_label\" text=\"{i18n&gt;ZCONTACT_SOURCE}\"/>\n\t\t\t\t</form:label>\n\t\t\t\t<form:fields>\n\t\t\t\t\t<Input xmlns=\"sap.m\" id=\"contact_source\" value=\"{ZCustomFields/zContactSource}\" editable=\"false\"/>\n\t\t\t\t</form:fields>\n\t\t\t</form:FormElement>\n\t\t\t<form:FormElement id=\"zdepartment_form\">\n\t\t\t\t<form:label>\n\t\t\t\t\t<Label xmlns=\"sap.m\" id=\"zdepartment_label\" text=\"{i18n&gt;ZDEPARTMENT}\"/>\n\t\t\t\t</form:label>\n\t\t\t\t<form:fields>\n\t\t\t\t\t<Input xmlns=\"sap.m\" id=\"ZCustomFields.zDepartmentDescInput\" value=\"{ZCustomFields/zDepartmentDesc}\"\n\t\t\t\t\tvalueHelpRequest=\"showAccountF4\" showValueHelp=\"true\"/>\n\t\t\t\t</form:fields>\n\t\t\t\t<form:fields>\n\t\t\t\t\t<Input xmlns=\"sap.m\" id=\"ZCustomFields.zDepartmentInput\" value=\"{ZCustomFields/zDepartment}\"\n\t\t\t\t\tvisible=\"false\"/>\n\t\t\t\t</form:fields>\n\t\t\t</form:FormElement>\n\t\t\t<form:FormElement id=\"other_function_form\">\n\t\t\t\t<form:label>\n\t\t\t\t\t<Label xmlns=\"sap.m\" id=\"other_function_label\" text=\"{i18n&gt;ZOTHER_FUNCTION}\"/>\n\t\t\t\t</form:label>\n\t\t\t\t<form:fields>\n\t\t\t\t\t<Select id=\"ZCustomFields.zOtherFunctionInput\" items=\"{ZCustomizing>/ZOtherFunction}\" selectedKey=\"{ZCustomFields/zOtherFunction}\">\n\t\t\t\t\t\t<core:Item key=\"{ZCustomizing>function}\" text=\"{ZCustomizing>description}\"/>\n\t\t\t\t\t</Select>\n\t\t\t\t</form:fields>\n\t\t\t</form:FormElement>\t\t\t\n\t\t\t\n\t\t</form:formElements>\n\t</form:FormContainer>\n\t\n</core:FragmentDefinition>",
		"cus/crm/myaccounts/ZCRM_MYACC_EM2/view/overview/AppointmentsCustom.controller.js": "sap.ui.controller(\"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.overview.AppointmentsCustom\", {\n\n\t_navigateToAppointment: function(oEvent) {\n\t\tif (sap.ushell && sap.ushell.Container) {\n\t\t\tvar fgetService = sap.ushell.Container.getService;\n\t\t\tif (fgetService) {\n\t\t\t\tvar oCrossAppNavigator = fgetService(\"CrossApplicationNavigation\");\n\n\t\t\t\tif (oCrossAppNavigator) {\n\t\t\t\t\toCrossAppNavigator.toExternal({\n\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t// Semantic object changed\n\t\t\t\t\t\t\tsemanticObject: \"ZMyAppointmentsHE\",\n\t\t\t\t\t\t\taction: \"myAppointments&/appointment/\" + oEvent.getSource().getBindingContext().getProperty(\"Guid\")\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_navigateToCreationOfAppointment: function(processType) {\n\t\tif (sap.ushell && sap.ushell.Container) {\n\t\t\tvar fgetService = sap.ushell.Container.getService;\n\t\t\tif (fgetService) {\n\t\t\t\tvar oCrossAppNavigator = fgetService(\"CrossApplicationNavigation\");\n\t\t\t\tif (oCrossAppNavigator) {\n\t\t\t\t\tvar contextPath = this.getView().getBindingContext().sPath.substring(1);\n\t\t\t\t\tvar oAccountData = this.getAccountData(contextPath);\n\n\t\t\t\t\t/*\n\t\t\t\t\t* In order to use StartupParameters handling use 'hrefForExternal' instead of 'toExternal'! \n\t\t\t\t\t*/\n\t\t\t\t\tvar toApp = oCrossAppNavigator.hrefForExternal({\n\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\tsemanticObject: \"ZMyAppointmentsHE\",\n\t\t\t\t\t\t\taction: \"myAppointments\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\t\"createFromAccount\": \"X\",\n\t\t\t\t\t\t\t\"ContactID\" : oAccountData.accountID,\n\t\t\t\t\t\t\t\"ContactName\" : oAccountData.accountName\n\t\t\t\t\t\t},\n\t\t\t\t\t\tappSpecificRoute: [\n\t\t\t\t\t\t\t\"&\", \"newappointmentfromaccount\", processType, contextPath\n\t\t\t\t\t\t].join(\"/\")\n\t\t\t\t\t});\n\t\t\t\t\tif (toApp) {\n\t\t\t\t\t\t// Navigate to the target\n\t\t\t\t\t\twindow.location = toApp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\n\tgetAccountData : function(sContextPath){\n\t\tvar oAccountData = this.getView().getModel().getProperty(\"/\" + sContextPath);\n\t\treturn {\n\t\t\taccountID : oAccountData.accountID,\n\t\t\taccountName : oAccountData.fullName\n\t\t};\n\t}\n\n});",
		"cus/crm/myaccounts/ZCRM_MYACC_EM2/view/overview/GeneralDataCustom.controller.js": "sap.ui.controller(\"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.overview.GeneralDataCustom\", {\n\t\n    //------------------- RELATION EXTENSIONS--------------------//\n\textHookGetDependentCustomRelations: function() {\n\t\treturn ['ZCustomFields'];\n\t},\n\t\n\tgetFooterButtons: function(){\n\t\tvar that = this;\n\t\treturn [{\n\t\t\t\tsI18nBtnTxt:\"BUTTON_EDIT\",\n\t\t\t\tsIcon:\"\",\n\t\t\t\tonBtnPressed:function () {\n\t\t\t\t\tthat._checkEdit();\n\t\t\t\t}\n\t\t\t}];\n\t},\n\t\n\t_checkEdit: function() {\n\t\tvar ctx1 = this.getView().getBindingContext().getObject().accountID;\n\t\tvar that = this;\n\t\tvar oModel = this.getView().getModel();\n\t\toModel.read(\"EditAuthorizationCheck\", null, {\n\t\t\t\tObjectID: oModel.formatValue(ctx1, \"Edm.String\")\n\t\t\t}, false, function(oData, resp) {\n\t\t\t\tif (oData.EditAuthorizationCheck.ActionSuccessful === \"X\") {\n\t\t\t\t\tvar oParameter;\n\t\t\t\t\toParameter = {\n\t\t\t\t\t\tcontextPath:that.getView().getBindingContext().sPath.substr(1)\n\t\t\t\t\t};\n\t\t\t\t\tthat.oRouter.navTo(\"edit\", oParameter, false);\n\t\t\t\t} else {\n\t\t\t\t\tsap.ca.ui.message.showMessageBox({\n\t\t\t\t\t\ttype: sap.ca.ui.message.Type.ERROR,\n\t\t\t\t\t\tmessage: oData.EditAuthorizationCheck.Message,\n\t\t\t\t\t\tdetails: null\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, null);\n\t\t\n\n\t}\n\n});",
		"cus/crm/myaccounts/ZCRM_MYACC_EM2/view/overview/ContactsCustom.controller.js": "sap.ui.controller(\"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.overview.ContactsCustom\", {\n\n\t_navToContact: function (oEvent) {\n\t\tvar contactContextPath = oEvent.getSource().getBindingContext().sPath.substr(1);\n\t\tvar fgetService = sap.ushell && sap.ushell.Container && sap.ushell.Container.getService;\n\t\tvar oCrossAppNavigator = fgetService && fgetService(\"CrossApplicationNavigation\");\n\t\tvar oBindingContext = this.getView().getBindingContext();\n\t\tif (oBindingContext && oBindingContext.getProperty(\"category\") === cus.crm.myaccounts.util.Constants.accountCategoryPerson){\n\t\toCrossAppNavigator.toExternal({\n\t\t\ttarget : {\n\t\t\t\tsemanticObject : \"ZMyContactsHE\",\n\t\t\t\taction : \"MyContacts&/detail2/\"+contactContextPath+\"/My Contacts/lastName/false/-1/-1/-1/20\"\n\t\t\t}\n\t\t}); }\n\t\telse {\n\t\t\tvar contactID = oEvent.getSource().getBindingContext().getObject().contactID;\n\t\t\toCrossAppNavigator.toExternal({\n\t\t\t\ttarget : {\n\t\t\t\t\tsemanticObject : \"ZMyAccountsHE\",\n\t\t\t\taction: \"MyAccounts&/detail/AccountCollection('\" + contactID + \"')\"\n\t\t\t}\n\t\t});\t\n\t\t}\n\t},\n\t\n\tonEditContactClicked:function (oEvent) {\n\t\tvar contactContextPath = oEvent.getSource().getBindingContext().sPath.substr(1);\n\t\tvar fgetService = sap.ushell && sap.ushell.Container && sap.ushell.Container.getService;\n\t\tvar oCrossAppNavigator = fgetService && fgetService(\"CrossApplicationNavigation\");\n\t\toCrossAppNavigator.toExternal({\n\t\t\ttarget : {\n\t\t\t\tsemanticObject : \"ZMyContactsHE\",\n\t\t\t\taction : \"MyContacts&/edit/\"+contactContextPath\n\t\t\t}\n\t\t});\n\t},\n\t\n\tgetFooterButtons: function(){\n\t\tvar that = this;\n\t\tvar oBindingContext = this.getView().getBindingContext();\n\t\tif (oBindingContext && oBindingContext.getProperty(\"category\") === cus.crm.myaccounts.util.Constants.accountCategoryPerson)\n\t\t\treturn;\n\t\n\t\treturn [{\n\t\t\t\tsIcon:\"sap-icon://add\",\n\t\t\t\tsTooltip: cus.crm.myaccounts.util.Util.geti18NText(\"ADD_CONTACT_TOOLTIP\"),\n\t\t\t\tonBtnPressed:function () {\n\t\t\t\t\tvar fgetService = sap.ushell && sap.ushell.Container && sap.ushell.Container.getService;\n\t\t\t\t\tvar oCrossAppNavigator = fgetService && fgetService(\"CrossApplicationNavigation\");\n\t\t\t\t\toCrossAppNavigator.toExternal({\n\t\t\t\t\t\ttarget : {\n\t\t\t\t\t\t\tsemanticObject : \"ZMyContactsHE\",\n\t\t\t\t\t\t\taction : \"MyContacts&/new/\"+that.getView().getBindingContext().sPath.substr(1)\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}];\n\t}\n\n});",
		"cus/crm/myaccounts/ZCRM_MYACC_EM2/view/overview/GeneralData_extDisplayFormMiddleCustom.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns=\"sap.m\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:form=\"sap.ui.layout.form\"\n\txmlns:layout=\"sap.ui.layout\" xmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<form:FormContainer xmlns:form=\"sap.ui.layout.form\" id=\"formAll_info\">\n\t\t<form:formElements>\n\t\t\t<form:FormElement id=\"zterritory_form\">\n\t\t\t\t<form:label>\n\t\t\t\t\t<Label xmlns=\"sap.m\" id=\"zterritory_label\" text=\"{i18n&gt;ZTERRITORY}\"/>\n\t\t\t\t</form:label>\n\t\t\t\t<form:fields>\n\t\t\t\t\t<Text xmlns=\"sap.m\" id=\"zterritory\" text=\"{ZCustomFields/zTerritoryDesc}\"/>\n\t\t\t\t</form:fields>\n\t\t\t</form:FormElement>\t\t\t\n\t\t\t<form:FormElement id=\"account_type_form\">\n\t\t\t\t<form:label>\n\t\t\t\t\t<Label xmlns=\"sap.m\" id=\"account_type_label\" text=\"{i18n&gt;ZACCOUNT_TYPE}\"/>\n\t\t\t\t</form:label>\n\t\t\t\t<form:fields>\n\t\t\t\t\t<Text xmlns=\"sap.m\" id=\"account_type\" text=\"{ZCustomFields/zdescription}\"/>\n\t\t\t\t</form:fields>\n\t\t\t</form:FormElement>\n\t\t\t<form:FormElement id=\"account_subtype_form\">\n\t\t\t\t<form:label>\n\t\t\t\t\t<Label xmlns=\"sap.m\" id=\"account_subtype_label\" text=\"{i18n&gt;ZACCOUNT_SUBTYPE}\"/>\n\t\t\t\t</form:label>\n\t\t\t\t<form:fields>\n\t\t\t\t\t<Text xmlns=\"sap.m\" id=\"account_subtype\" text=\"{ZCustomFields/zsubDescription}\"/>\n\t\t\t\t</form:fields>\n\t\t\t</form:FormElement>\n\t\t</form:formElements>\n\t</form:FormContainer>\n\t<form:FormContainer xmlns:form=\"sap.ui.layout.form\" id=\"formCorporate_info\"\n\t\tvisible=\"{parts:['category', 'constants>/accountCategoryPerson'], formatter: 'cus.crm.myaccounts.util.formatter.isUnequal'}\">\n\t\t<form:formElements>\n\t\t\t<form:FormElement id=\"account_3type_form\">\n\t\t\t\t<form:label>\n\t\t\t\t\t<Label xmlns=\"sap.m\" id=\"account_3type_label\" text=\"{i18n&gt;ZACCOUNT_THIRDTYPE}\"/>\n\t\t\t\t</form:label>\n\t\t\t\t<form:fields>\n\t\t\t\t\t<Text xmlns=\"sap.m\" id=\"zacc3rdtype\" text=\"{ZCustomFields/zacc3rdtypeDescr}\"/>\n\t\t\t\t</form:fields>\n\t\t\t</form:FormElement>\n\t\t\t<form:FormElement id=\"account_status_form\">\n\t\t\t\t<form:label>\n\t\t\t\t\t<Label xmlns=\"sap.m\" id=\"account_status_label\" text=\"{i18n&gt;ZACCOUNT_STATUS}\"/>\n\t\t\t\t</form:label>\n\t\t\t\t<form:fields>\n\t\t\t\t\t<Text xmlns=\"sap.m\" id=\"zaccstatus\" text=\"{ZCustomFields/zaccStatusDescr}\"/>\n\t\t\t\t</form:fields>\n\t\t\t</form:FormElement>\n\t\t\t<form:FormElement id=\"account_insvariations_form\">\n\t\t\t\t<form:label>\n\t\t\t\t\t<Label xmlns=\"sap.m\" id=\"insvariations_label\" text=\"{i18n&gt;ZINS_VARIATIONS}\"/>\n\t\t\t\t</form:label>\n\t\t\t\t<form:fields>\n\t\t\t\t\t<Text xmlns=\"sap.m\" id=\"insvariations\" text=\"{ZCustomFields/zinsVariations}\"/>\n\t\t\t\t</form:fields>\n\t\t\t</form:FormElement>\n\t\t\t<form:FormElement id=\"enrollment_form\">\n\t\t\t\t<form:label>\n\t\t\t\t\t<Label xmlns=\"sap.m\" id=\"enrollment_label\" text=\"{i18n&gt;ZTOTAL_ENROLMENT}\"/>\n\t\t\t\t</form:label>\n\t\t\t\t<form:fields>\n\t\t\t\t\t<Text xmlns=\"sap.m\" id=\"enrollment\" text=\"{ZCustomFields/zenrollment}\"/>\n\t\t\t\t</form:fields>\n\t\t\t</form:FormElement>\n\t\t</form:formElements>\n\t</form:FormContainer>\n\t<form:FormContainer xmlns:form=\"sap.ui.layout.form\" id=\"formIndividual_info\"\n\t\tvisible=\"{parts:['category', 'constants>/accountCategoryPerson'], formatter: 'cus.crm.myaccounts.util.formatter.isEqual'}\">\n\t\t<form:formElements>\n\t\t\t<form:FormElement id=\"account_sam_status_form\">\n\t\t\t\t<form:label>\n\t\t\t\t\t<Label xmlns=\"sap.m\" id=\"sampling_status_label\" text=\"{i18n&gt;ZSAMPLING_STATUS}\"/>\n\t\t\t\t</form:label>\n\t\t\t\t<form:fields>\n\t\t\t\t\t<Text xmlns=\"sap.m\" id=\"sampling_status\"\n\t\t\t\t\t\ttext=\"{path:'zSamplingStatus', formatter:'cus.crm.myaccounts.ZCRM_MYACC_EM2.util.formatter.formatSamplingStatus'}\"/>\n\t\t\t\t</form:fields>\n\t\t\t</form:FormElement>\n\t\t\t<form:FormElement id=\"account_ind_status_form\">\n\t\t\t\t<form:label>\n\t\t\t\t\t<Label xmlns=\"sap.m\" id=\"account_ind_status_label\" text=\"{i18n&gt;ZACCOUNT_STATUS}\"/>\n\t\t\t\t</form:label>\n\t\t\t\t<form:fields>\n\t\t\t\t\t<Text xmlns=\"sap.m\" id=\"zaccindstatus\" text=\"{path: 'zAccountStatus', formatter: 'cus.crm.myaccounts.ZCRM_MYACC_EM2.util.formatter.formatAccIndStatus'}\"/>\n\t\t\t\t</form:fields>\n\t\t\t</form:FormElement>\n\t\t\t<form:FormElement id=\"zdepartment_form\">\n\t\t\t\t<form:label>\n\t\t\t\t\t<Label xmlns=\"sap.m\" id=\"zdepartment_label\" text=\"{i18n&gt;ZDEPARTMENT}\"/>\n\t\t\t\t</form:label>\n\t\t\t\t<form:fields>\n\t\t\t\t\t<Text xmlns=\"sap.m\" id=\"zdepartment_zstatus\" text=\"{ZCustomFields/zDepartmentDesc}\"/>\n\t\t\t\t</form:fields>\n\t\t\t</form:FormElement>\n\t\t\t<form:FormElement id=\"contact_source_form\">\n\t\t\t\t<form:label>\n\t\t\t\t\t<Label xmlns=\"sap.m\" id=\"contact_source_label\" text=\"{i18n&gt;ZCONTACT_SOURCE}\"/>\n\t\t\t\t</form:label>\n\t\t\t\t<form:fields>\n\t\t\t\t\t<Text xmlns=\"sap.m\" id=\"contact_source\" text=\"{ZCustomFields/zContactSource}\"/>\n\t\t\t\t</form:fields>\n\t\t\t</form:FormElement>\n\t\t\t<form:FormElement id=\"other_function_form\">\n\t\t\t\t<form:label>\n\t\t\t\t\t<Label xmlns=\"sap.m\" id=\"other_function_label\" text=\"{i18n&gt;ZOTHER_FUNCTION}\"/>\n\t\t\t\t</form:label>\n\t\t\t\t<form:fields>\n\t\t\t\t\t<Text xmlns=\"sap.m\" id=\"other_function\" text=\"{ZCustomFields/zOtherFunctionDesc}\"/>\n\t\t\t\t</form:fields>\n\t\t\t</form:FormElement>\t\t\t\n\t\t</form:formElements>\n\t</form:FormContainer>\n</core:FragmentDefinition>",
		"cus/crm/myaccounts/ZCRM_MYACC_EM2/view/overview/ZAccountSelectDialog.fragment.xml": "<core:FragmentDefinition\r\n  xmlns=\"sap.m\"\r\n  xmlns:core=\"sap.ui.core\"\r\n  xmlns:layout=\"sap.ui.layout\"\r\n  xmlns:app=\"http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1\">\r\n<SelectDialog\r\n        xmlns=\"sap.m\"\r\n        xmlns:core=\"sap.ui.core\"\r\n        title=\"{i18n>ZDEPARTMNET_TITLE}\"\r\n        noDataText=\"{i18n>LOADING_TEXT}\"\r\n        multiSelect=\"\"\r\n        confirm=\"setAccount\"\r\n        search=\"searchAccount\"\r\n        liveChange=\"liveSearchAccount\" >\r\n\t<StandardListItem \r\n\t\t\ttitle=\"{fullName}\"\r\n\t\t\tapp:key=\"{accountID}\"\r\n\t\t\t/>\r\n</SelectDialog>\r\n\r\n</core:FragmentDefinition>",
		"cus/crm/myaccounts/ZCRM_MYACC_EM2/view/overview/ModulesCustom.controller.js": "sap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\"\r\n], function(Controller) {\r\n\t\"use strict\";\r\n\r\n\treturn Controller.extend(\"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.overview.ModulesCustom\", {\r\n\t\t\r\n\t\tonInit: function() {\r\n\t\t\tthis.BatchOperations = [];\r\n\t\t},\r\n\t\t\r\n\t\tonModuleClicked: function(oEvent) {\r\n\r\n\t\t\tvar fgetService = sap.ushell && sap.ushell.Container && sap.ushell.Container.getService;\r\n\t\t\tvar oCrossAppNavigator = fgetService && fgetService(\"CrossApplicationNavigation\");\r\n\t\t\tvar moduleID = oEvent.getSource().getProperty(\"target\");\r\n\t\t\tvar sPath = this.getView().getBindingContext().getPath();\r\n\t\t\tvar oAccount = this.getView().getBindingContext().getModel().getProperty(sPath);\r\n\t\t\t\r\n\t\t\toCrossAppNavigator.toExternal({\r\n\t\t\t\ttarget: {\r\n\t\t\t\t\tsemanticObject: \"ZMyModulesHE\",\r\n\t\t\t\t\taction: \"navigate&/account/\" + oAccount.accountID + \"/module/\" + moduleID\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t},\r\n\t\t\r\n/*\t\tonModuleDelete: function(oEvent){\r\n\t\t\tvar sRequestURL = oEvent.getSource().getBindingContext().sPath;\r\n\t\t\tvar oBatchOperation = this.getView().getModel().createBatchOperation(sRequestURL, \"DELETE\");\r\n\t\t\tthis.BatchOperations.unshift(oBatchOperation);\r\n\t\t\tthis._sendBatchOperations();\r\n\t\t\t\r\n\t\t},*/\r\n\r\n\t\tgetFooterButtons: function() {\r\n\t\t\tvar that = this;\r\n\t\t\tvar oBindingContext = this.getView().getBindingContext();\r\n\t\t\tvar sPath = oBindingContext.getPath();\r\n\t\t\tvar oAccount = oBindingContext.getModel().getProperty(sPath);\r\n\t\t\tif (oBindingContext && oBindingContext.getProperty(\"category\") === cus.crm.myaccounts.util.Constants.accountCategoryPerson)\r\n\t\t\t\treturn;\r\n\t\t\t\r\n\t\t\treturn [{\r\n\t\t\t\tsIcon: \"sap-icon://add\",\r\n\t\t\t\tsTooltip: cus.crm.myaccounts.util.Util.geti18NText(\"ZADD_MODULE_TOOLTIP\"),\r\n\t\t\t\tonBtnPressed: function() {\r\n\t\t\t\t\tvar fgetService = sap.ushell && sap.ushell.Container && sap.ushell.Container.getService;\r\n\t\t\t\t\tvar oCrossAppNavigator = fgetService && fgetService(\"CrossApplicationNavigation\");\r\n\t\t\t\t\toCrossAppNavigator.toExternal({\r\n\t\t\t\t\t\ttarget: {\r\n\t\t\t\t\t\t\tsemanticObject: \"ZMyModulesHE\",\r\n\t\t\t\t\t\t\taction: \"navigate&/account/\" + oAccount.accountID + \"/module/new\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}];\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"cus/crm/myaccounts/ZCRM_MYACC_EM2/view/overview/MarketingAttributesCustom.controller.js": "sap.ui.controller(\"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.overview.MarketingAttributesCustom\", {\n\n\t_checkEdit: function() {\n\t\tvar ctx1 = this.getView().getBindingContext().getObject().accountID;\n\t\tvar that = this;\n\t\tvar oModel = this.getView().getModel();\n\t\toModel.read(\"EditAuthorizationCheck\", null, {\n\t\t\t\tObjectID: oModel.formatValue(ctx1, \"Edm.String\")\n\t\t\t}, false, function(oData, resp) {\n\t\t\t\tif (oData.EditAuthorizationCheck.ActionSuccessful == \"X\") {\n\t\t\t\t\tthat.editPossible = true;\n\t\t\t\t} else {\n\t\t\t\t\tthat.editPossible = false;\n\t\t\t\t\tthat._bindMarketingAttributes();\n\t\t\t\t\tsap.m.MessageBox.error(oData.EditAuthorizationCheck.Message, null);\n\t\t\t\t}\n\t\t\t}, null);\n\n\t},\n\t\n\tonAddMarketingAttributeClicked: function() {\n\t\tthis._checkEdit();\n\t\tif (this.editPossible === true){\n\t\t\tjQuery.sap.log.debug(\"cus.crm.myaccounts.view.overview.MarketingAttributes - onAddMarketingAttributeClicked\");\n\t\t\tthis._savePendingData();\n\t\t\tvar oMktAttrModel = this.getList().getModel(\"mktattr\");\n\t\t\tvar aMktAttributes = oMktAttrModel.getProperty(\"/MarketingAttributes\");\n\t\t\tif(aMktAttributes.length > 0 && !aMktAttributes[0].value && !aMktAttributes[0].attribute && !aMktAttributes[0].attributeSet)\n\t\t\t\treturn; //return if an empty new line exists\n\t\n\t\t\tvar oNewMktAttribute = this._generateTemplateForMarketingAttribute();\n\t\t\toNewMktAttribute.mode = cus.crm.myaccounts.util.Constants.modeEdit;\n\t\t\taMktAttributes.unshift(oNewMktAttribute);\n\t\t\toMktAttrModel.setProperty(\"/MarketingAttributes\", aMktAttributes);\n\t\t}\n\t},\n\n\tonDeleteMarketingAttributeClicked: function(oEvent) {\n\t\tthis._checkEdit();\n\t\tif (this.editPossible === true){\n\t\t\tjQuery.sap.log.debug(\"cus.crm.myaccounts.view.overview.MarketingAttributes - onDeleteMarketingAttributeClicked - ContextPath: \"+oEvent.getSource().getBindingContext(\"mktattr\").sPath);\t\n\t\n\t\t\tvar oMktAttributeContext = oEvent.getSource().getBindingContext(\"mktattr\");\n\t\t\tvar oMktAttribute = oMktAttributeContext.getObject();\n\t\t\tvar lineNumber = oMktAttributeContext.sPath.substring(21);\n\t\t\tif(!oMktAttribute.eTag) {\n\t\t\t\t// new attribute; not yet send to the backend\n\t\t\t\tthis._removeLine(lineNumber);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar sRequestURL = oMktAttribute.key;\n\t\t\t\tvar oBatchOperation = this.getView().getModel().createBatchOperation(sRequestURL, \"DELETE\");\t\n\t\t\t\tthis._collectBatchOperation(oBatchOperation, this._onAfterSave, this._onAfterSaveWithError, lineNumber );\n\t\t\t\toMktAttribute.mode = cus.crm.myaccounts.util.Constants.modeEdit; //needed because _removeCoherentErrorFlags will not consider this line. Also a solution with another mode like \"deleteMode\" would work\n\t\t\t}\n\t\t\tthis._savePendingData();\t//save other changed lines and sent all operations together\n\t\t}\n\t},\n\t\n\tonSaveMarketingAttributeClicked: function(oEvent) {\n\t\tthis._checkEdit();\n\t\tif (this.editPossible === true){\n\t\t\tjQuery.sap.log.debug(\"cus.crm.myaccounts.view.overview.MarketingAttributes - onSaveMarketingAttributeClicked - ContextPath: \"+oEvent.getSource().getBindingContext(\"mktattr\").sPath);\n\t\t\tthis._savePendingData();\n\t\t}\n\t},\n\t\n\tonEditMarketingAttributeClicked: function(oEvent) {\n\t\tthis._checkEdit();\n\t\tif (this.editPossible === true){\n\t\t\tjQuery.sap.log.debug(\"cus.crm.myaccounts.view.overview.MarketingAttributes - onEditMarketingAttributeClicked\");\n\t\n\t\t\tthis._savePendingData();\n\t\n\t\t\tvar oMktAttrContext = oEvent.getSource().getBindingContext(\"mktattr\");\n\t\t\tvar oMktAttr = oMktAttrContext.getObject();\n\t\t\toMktAttr.mode = cus.crm.myaccounts.util.Constants.modeEdit;\n\t\n\t\t\tif(oMktAttr.valueRestricted || oMktAttr.hasChecktable) {\n\t\t\t\tthis._readAttributeValuesForSelect(oMktAttr);\n\t\t\t}else{\n\t\t\t\tthis._setAttributeValues(oMktAttr);\n\t\t\t\tthis._setUIFieldType(oMktAttr);\n\t\t\t\tthis.refreshUI();\n\t\t\t}\n\t\t}\n\t}\n\n});",
		"cus/crm/myaccounts/ZCRM_MYACC_EM2/view/overview/AttachmentsCustom.controller.js": "sap.ui.controller(\"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.overview.AttachmentsCustom\", {\n\n\tonChange: function(oEvent) {\n\t\tthis._checkEdit();\n\t\tif (this.editPossible === true){\n\t\t\tvar oModel = this.getView().getModel();\n\t\t\tvar oUploadCollection = oEvent.getSource();\n\t\t\tvar filename = oEvent.getParameter(\"mParameters\").files[0].name;\n\t\t\tvar token = this.sToken || oModel.getSecurityToken();\n\t\n\t\t\t// Header Token\n\t\t\tvar oCustomerHeaderToken = new sap.m.UploadCollectionParameter({\n\t\t\t\tname : \"x-csrf-token\",\n\t\t\t\tvalue : token\n\t\t\t});\n\t\t\toUploadCollection.addHeaderParameter(oCustomerHeaderToken);\n\t\n\t\t\t// Header Content-Disposition\n\t\t\tvar oCustomerHeaderContentDisp = new sap.m.UploadCollectionParameter({\n\t\t\t\tname : \"content-disposition\",\n\t\t\t\tvalue : \"inline; filename=\\\"\" + encodeURIComponent(filename) + \"\\\"\"\n\t\t\t});\n\t\t\toUploadCollection.addHeaderParameter(oCustomerHeaderContentDisp);\n\t\t}\t\n\t},\n\n\tonDeleteFile: function(oEvent) {\n\t\tthis._checkEdit();\n\t\tif (this.editPossible === true){\n\t\t\tvar docID = oEvent.getParameter(\"documentId\");\n\t\t\tvar accountID = this.getView().getBindingContext().getObject().accountID;\n\t\t\tvar contextPath = \"AttachmentCollection(documentID='\" + docID + \"',documentClass='BDS_POC1',businessPartnerID='\" + accountID + \"')\";\n\t\t\tvar oModel = this.getView().getModel();\n\t\t\tvar aBatchOperation = [oModel.createBatchOperation(contextPath, \"DELETE\", undefined, {sETag: \"*\"})];\n\t\t\tcus.crm.myaccounts.util.Util.sendBatchChangeOperations(oModel, aBatchOperation);\n\t\t}\n\t},\n\n\tonRenameFile: function(oEvent) {\n\t\tthis._checkEdit();\n\t\tif (this.editPossible === true){\n\t\t\tvar docID = oEvent.getParameter(\"documentId\");\n\t\t\tvar fileName = oEvent.getParameter(\"fileName\");\n\t\t\tvar accountID = this.getView().getBindingContext().getObject().accountID;\n\t\t\tvar contextPath = \"AttachmentCollection(documentID='\" + docID + \"',documentClass='BDS_POC1',businessPartnerID='\" + accountID + \"')\";\n\t\t\tthis._renameFile(contextPath, fileName, false);\n\t\t}\n\t},\n\t\n\t_checkEdit: function() {\n\t\tvar ctx1 = this.getView().getBindingContext().getObject().accountID;\n\t\tvar that = this;\n\t\tvar oModel = this.getView().getModel();\n\t\toModel.read(\"EditAuthorizationCheck\", null, {\n\t\t\t\tObjectID: oModel.formatValue(ctx1, \"Edm.String\")\n\t\t\t}, false, function(oData, resp) {\n\t\t\t\tif (oData.EditAuthorizationCheck.ActionSuccessful == \"X\") {\n\t\t\t\t\tthat.editPossible = true;\n\t\t\t\t} else {\n\t\t\t\t\tthat.editPossible = false;\n\t\t\t\t\tsap.ca.ui.message.showMessageBox({\n\t\t\t\t\t\ttype: sap.ca.ui.message.Type.ERROR,\n\t\t\t\t\t\tmessage: oData.EditAuthorizationCheck.Message,\n\t\t\t\t\t\tdetails: null\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, null);\n\t\t\n\n\t}\n\n});",
		"cus/crm/myaccounts/ZCRM_MYACC_EM2/view/overview/NotesCustom.controller.js": "sap.ui.controller(\"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.overview.NotesCustom\", {\n\t\n\tonAddNote:function (oEvent) {\n\t\t\n\t\tthis._checkEdit();\n\t\tif (this.editPossible === true){\n\t\t\tvar text, oView, oModel, accountID = \"\", oNote, oContext;\n\t\n\t\t\t// text is the string you entered in the textarea.\n\t\t\ttext = oEvent.getParameter(\"value\");\n\t\t\t\n\t\t\t//Trim text and do not create note if string is empty\n\t\t\ttext = jQuery.trim(text);\n\t\t\tif(text.length === 0){\n\t\t\t\treturn; \n\t\t\t}\n\t\n\t\t\toView = this.getView();\n\t\t\toModel = this.getView().getModel();\n\t\t\toNote = {\n\t\t\t\t\"tdname\":accountID, // must not be null, but\n\t\t\t\t\"tdid\":\"\",\n\t\t\t\t\"tdspras\":\"\",\n\t\t\t\t\"content\":text,\n\t\t\t\t\"createdAt\":null, // must be null (or set)\n\t\t\t\t\"creator\":\"\"\n\t\t\t};\n\t\t\toContext = oView.getBindingContext();\n\t\n\t\t\tvar oNoteCreateError = jQuery.proxy(function (oError) {\n\t\t\t\tvar sMessage = \"\";\n\t\t\t\tif (oError.response) {\n\t\t\t\t\tsMessage = jQuery.parseJSON(oError.response.body).error.message.value;\n\t\t\t\t}\n\t\t\t\tsap.ca.ui.message.showMessageBox({\n\t\t\t\t\ttype:sap.ca.ui.message.Type.ERROR,\n\t\t\t\t\tmessage:sMessage\n\t\t\t\t});\t\t\t\n\t\t\t\t\n\t\t\t}, this);\n\t\n\t\t\toModel.create(\"Notes\", oNote, oContext, undefined, oNoteCreateError);\n\t\n\t\t\t// In case the device is a phone or tablet, a keyboard is displayed to type\n\t\t\t// in the note's text. After pressing the button to add the note, the focus\n\t\t\t// is moved away from input field so that the keyboard disappears.\n\t\t\t// Hybrid devices can have the property to be both, desktop and tablet.\n\t\t\tif(sap.ui.Device.system.phone || (sap.ui.Device.system.tablet && !sap.ui.Device.system.desktop)) {\n\t\t\t\tvar oList = this.getList();\n\t\t\t\tvar oBinding = oList.getBinding(\"items\");\n\t\t\t\tvar fnReceivedHandler = null;\n\t\t\t\tfnReceivedHandler = jQuery.proxy(function () {\n\t\t\t\t\toList.focus();\n\t\t\t\t\toBinding.detachDataReceived(fnReceivedHandler);\n\t\t\t\t}, this);\n\t\t\t\toBinding.attachDataReceived(fnReceivedHandler);\n\t\t\t}\n\t\t}\n\t},\n\t\n\t_checkEdit: function() {\n\t\tvar ctx1 = this.getView().getBindingContext().getObject().accountID;\n\t\tvar that = this;\n\t\tvar oModel = this.getView().getModel();\n\t\toModel.read(\"EditAuthorizationCheck\", null, {\n\t\t\t\tObjectID: oModel.formatValue(ctx1, \"Edm.String\")\n\t\t\t}, false, function(oData, resp) {\n\t\t\t\tif (oData.EditAuthorizationCheck.ActionSuccessful == \"X\") {\n\t\t\t\t\tthat.editPossible = true;\n\t\t\t\t} else {\n\t\t\t\t\tthat.editPossible = false;\n\t\t\t\t\tsap.ca.ui.message.showMessageBox({\n\t\t\t\t\t\ttype: sap.ca.ui.message.Type.ERROR,\n\t\t\t\t\t\tmessage: oData.EditAuthorizationCheck.Message,\n\t\t\t\t\t\tdetails: null\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, null);\n\t\t\n\n\t}\n\n\n});",
		"cus/crm/myaccounts/ZCRM_MYACC_EM2/view/overview/OpportunitiesCustom.controller.js": "sap.ui.controller(\"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.overview.OpportunitiesCustom\", {\n\t\n    //------------------ CUSTOM FUNCTIONS ---------------//\t\n\n\tonDepartmentClicked: function(e) {\n\t\tthis._navToDepartment(e);\n\n\t},\n\n\t_navToDepartment: function(e) {\n\t\tvar g = e.getSource().getBindingContext().getObject().zdepartment;\n\t\tvar f = sap.ushell && sap.ushell.Container && sap.ushell.Container.getService;\n\t\tvar c = f && f(\"CrossApplicationNavigation\");\n\t\tif (c) {\n\t\t\tc.toExternal({\n\t\t\t\ttarget: {\n\t\t\t\t\tsemanticObject: \"ZMyAccountsHE\",\n\t\t\t\t\taction: \"MyAccounts&/detail/AccountCollection('\" + g + \"')\"\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\tonAccountClicked: function(oEvent) {\n\t\tthis._showBusinessCardAccountfunction(oEvent);\n\t},\n\n\t_showBusinessCardAccountfunction : function(oEvent) {\n\t\tvar contextPath = oEvent.getSource().getBindingContext().sPath;\n\t\tvar oModel = this.getView().getModel();\n\t\tvar oContact = oModel.getProperty(contextPath + \"/MainContact\");\n\t\tvar oAccount = this.getView().getBindingContext().getObject();\n\t\tvar that = this;\n\t\tthis._navToAccount(oModel.getProperty(contextPath + \"/MainContact\"));\n\t},\n\n\t_navToAccount: function(oContact) {\n\n\t\t\tvar contactID = oContact.contactID;\n\t\t\tvar fgetService = sap.ushell && sap.ushell.Container && sap.ushell.Container.getService;\n\t\t\tvar oCrossAppNavigator = fgetService && fgetService(\"CrossApplicationNavigation\");\n\n\t\t\tif (oCrossAppNavigator) {\n\t\t\t\toCrossAppNavigator.toExternal({\n\t\t\t\t\ttarget : {\n\t\t\t\t\tsemanticObject : \"ZMyAccountsHE\",\n\t\t\t\t\taction : \"MyAccounts&/detail/AccountCollection('\" + contactID + \"')\"\n\t\t\t\t    }\n\t\t\t    });\n\t\t    }\n\t},\n\t\n\t_navToOpportunity: function (oEvent) {\n\t\t\tvar guid = oEvent.getSource().getBindingContext().getObject().Guid;\n\n\t\t\t// *XNav* (1) obtain cross app navigation interface\n\t\t\tvar fgetService = sap.ushell && sap.ushell.Container && sap.ushell.Container.getService;\n\t\t\tvar oCrossAppNavigator = fgetService && fgetService(\"CrossApplicationNavigation\");\n\n\t\t\t// *XNav (2) generate cross application link\n\t\t\tif (oCrossAppNavigator) {\n\t\t\t\toCrossAppNavigator.toExternal({\n\t\t\t\t\ttarget : {\n\t\t\t\t\tsemanticObject : \"ZHEOpportunities\",\n\t\t\t\t\taction : \"manageOpportunity&/display/Opportunities(guid'\" + guid + \"')\"\n\t\t\t\t    }\n\t\t\t   });\n\t    \t}\n\t\t},\n\t\t\n\t_navigateToCreationOfOpportunity: function(processType) {\n\t\t\t\tvar fgetService = sap.ushell.Container.getService;\n\t\t\t\t\tvar oCrossAppNavigator = fgetService(\"CrossApplicationNavigation\");\n\t\t\t\t\t\tvar contextPath = this.getView().getBindingContext().sPath.substring(1);\n\t\t\t\t\t\toCrossAppNavigator.toExternal({\n\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\tsemanticObject: \"ZHEOpportunities\",\n\t\t\t\t\t\t\t\taction: \"manageOpportunity&/NewOpportunityFromAccount/\" + processType + \"/\" + contextPath\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t},\n\n});",
		"cus/crm/myaccounts/ZCRM_MYACC_EM2/view/overview/OpportunitiesCustom.view.xml": "<!--\r\n\r\n    Copyright (C) 2009-2014 SAP SE or an SAP affiliate company. All rights reserved\r\n\r\n-->\r\n<core:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" xmlns:layout=\"sap.ui.layout\"\r\n\tcontrollerName=\"cus.crm.myaccounts.view.overview.Opportunities\" xmlns:html=\"http://www.w3.org/1999/xhtml\">\r\n\t<Table id=\"list\" mode=\"{device>/listMode}\" growing=\"true\" growingThreshold=\"10\" growingScrollToLoad=\"false\"\r\n\t\titems=\"{path:'Opportunities', parameters: {expand: 'MainContact,MainContact/Photo'}}\">\r\n\t\t<columns>\r\n\t\t\t<Column id=\"descriptionCol\" width=\"15%\" minScreenWidth=\"Small\" demandPopin=\"true\"><Label text=\"{i18n>DESCRIPTION}\"/></Column>\r\n\t\t\t<Column id=\"mainContactCol\" width=\"20%\" minScreenWidth=\"Medium\" demandPopin=\"true\"><Label text=\"{i18n>ZLECTURER}\"/></Column>\r\n\t\t\t<Column id=\"departmentCol\" width=\"15%\" minScreenWidth=\"Large\" demandPopin=\"true\"><Label text=\"{i18n>ZDEPARTMENT}\"/></Column>\r\n\t\t\t<Column id=\"volumeCol\" width=\"5%\" minScreenWidth=\"Large\" demandPopin=\"true\"><Label text=\"{i18n>VOLUME}\"/></Column>\r\n\t\t\t<Column id=\"probabilityCol\" width=\"5%\" minScreenWidth=\"Large\" demandPopin=\"true\"><Label text=\"{i18n>PROBABILITY}\"/></Column>\r\n\t\t\t<Column id=\"opportunityTypeCol\" width=\"5%\" minScreenWidth=\"Large\" demandPopin=\"true\"><Label text=\"{i18n>ZOPPTYPE}\"/></Column>\r\n\t\t\t<Column id=\"moduleEnrolmentCol\" width=\"5%\" minScreenWidth=\"Large\" demandPopin=\"true\"><Label text=\"{i18n>ZOPPORTUNITYENROLL}\"/></Column>\r\n\t\t\t<Column id=\"closingDate\" width=\"8%\" minScreenWidth=\"XLarge\" demandPopin=\"true\"><Label text=\"{i18n>CLOSE_BY}\"/></Column>\r\n\t\t\t<Column id=\"statusCol\" width=\"8%\" minScreenWidth=\"XXLarge\" demandPopin=\"true\"><Label text=\"{i18n>STATUS}\"/></Column>\r\n\t\t\t<Column id=\"productCol\"  minScreenWidth=\"Large\" demandPopin=\"true\"><Label text=\"{i18n>ZOPPPRODUCT}\"/></Column>\r\n\r\n\t\t\t<!-- <Column id=\"actions\" width=\"3rem\" minScreenWidth=\"Desktop\" demandPopin=\"true\"><Text text=\"{i18n>ACTIONS}\" /></Column> -->\r\n\t\t</columns>\r\n\t\t<items>\r\n\t\t\t<ColumnListItem id=\"columnListItem\">\r\n\t\t\t\t<cells>\r\n\t\t\t\t\t<VBox>\r\n\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t<Link text=\"{description}\" press=\"onOpportunityDescriptionLinkClicked\"/>\r\n\t\t\t\t\t\t\t<Label text=\"{objectId}\"/>\r\n\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t<layoutData>\r\n\t\t\t\t\t\t\t<layout:GridData span=\"L12 M12 S12\"/>\r\n\t\t\t\t\t\t</layoutData>\r\n\t\t\t\t\t</VBox>\r\n\t\t\t\t\t<layout:Grid class=\"gridMarginTop\" defaultSpan=\"L3 M3 S6\" hSpacing=\"0\" vSpacing=\"0\">\r\n\t\t\t\t\t\t<layout:content>\r\n\t\t\t\t\t\t\t<core:Icon src=\"{path:'MainContact/Photo/__metadata/media_src', formatter: 'cus.crm.myaccounts.util.formatter.pictureUrlFormatter'}\"\r\n\t\t\t\t\t\t\t\tvisible=\"{parts:[{path:'MainContact/contactID'}, {path:'MainContact/Photo/__metadata/media_src'}], formatter:'cus.crm.myaccounts.util.formatter.standardIconVisibilityFormatter'}\"\r\n\t\t\t\t\t\t\t\tsize=\"2.5rem\"></core:Icon>\r\n\t\t\t\t\t\t\t<Image src=\"{path:'MainContact/Photo/__metadata/media_src', formatter:'cus.crm.myaccounts.util.formatter.pictureUrlFormatter'}\"\r\n\t\t\t\t\t\t\t\tvisible=\"{path:'MainContact/Photo/__metadata/media_src', formatter:'cus.crm.myaccounts.util.formatter.logoVisibilityFormatter'}\"\r\n\t\t\t\t\t\t\t\theight=\"2.5rem\" width=\"2.5rem\"></Image>\r\n\t\t\t\t\t\t\t<VBox>\r\n\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t<!-- \t<Link text=\"{MainContact/fullName}\" press=\"onMainContactLinkClicked\"/>   --> \r\n\t\t\t\t\t\t\t\t<Link text=\"{MainContact/fullName}\" press=\"onAccountClicked\"/> \r\n\t\t\t\t\t\t\t\t\t<Label text=\"{MainContact/function}\"/>\r\n\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t<layoutData>\r\n\t\t\t\t\t\t\t\t\t<layout:GridData span=\"L8 M8 S8\"/>\r\n\t\t\t\t\t\t\t\t</layoutData>\r\n\t\t\t\t\t\t\t</VBox>\r\n\t\t\t\t\t\t</layout:content>\r\n\t\t\t\t\t</layout:Grid>\r\n\t\t\t\t\t<VBox>\r\n\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t<Link text=\"{zdepartmentName}\" press=\"onDepartmentClicked\"/>\r\n\t\t\t\t\t\t\t<Label text=\"{zdepartment}\"/>\r\n\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t<layoutData>\r\n\t\t\t\t\t\t\t<layout:GridData span=\"L12 M12 S12\"/>\r\n\t\t\t\t\t\t</layoutData>\r\n\t\t\t\t\t</VBox>\r\n\t\t\t\t\t<Text text=\"{parts:[{path: 'expRevenue'}, {path: 'currency'}], formatter:'cus.crm.myaccounts.util.formatter.formatAmounts'}\"/>\r\n\t\t\t\t\t<Text text=\"{path: 'probability', formatter: 'cus.crm.myaccounts.util.formatter.formatProbability'}\"/>\r\n\t\t\t\t\t<Text text=\"{ztypeDescription}\" />\r\n\t\t\t\t\t<Text text=\"{zmoduleEnrolment}\" />\r\n\t\t\t\t\t<Text text=\"{parts:[{path:'closingDate'}],formatter:'cus.crm.myaccounts.util.formatter.formatMediumDate' }\"/>\r\n\t\t\t\t\t<ObjectStatus text=\"{statusText}\" state=\"{path:'status', formatter:'cus.crm.myaccounts.util.formatter.formatStatusText'}\"/>\r\n\t\t\t\t\t<Text text=\"{zproduct}\" />\r\n\t\t\t\t\t<!--\r\n         \t\t\t\t<layout:HorizontalLayout>\r\n\t\t\t\t        \t<core:Icon src=\"sap-icon://edit\" size=\"1.3rem\" press=\"onEditOpportunityClicked\"/>\r\n\t\t\t            </layout:HorizontalLayout>\r\n\t\t\t            -->\r\n\t\t\t\t</cells>\r\n\t\t\t</ColumnListItem>\r\n\t\t</items>\r\n\t</Table>\r\n</core:View>",
		"cus/crm/myaccounts/ZCRM_MYACC_EM2/view/overview/OverviewPageCustom.controller.js": "jQuery.sap.require(\"cus.crm.myaccounts.ZCRM_MYACC_EM2.util.formatter\");\njQuery.sap.require(\"cus.crm.myaccounts.util.formatter\");\nsap.ui.controller(\"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.overview.OverviewPageCustom\", {\n\n\textHookAdaptAvailableSubViews: function(tabs) {\n\t\t// Place your hook implementation code here \n\t\tvar sTab = tabs;\n\t\tvar Departments = {\n\t\t\thidden: undefined,\n//\t\t\thidden: cus.crm.myaccounts.util.formatter.isEqual('category', 'constants>/accountCategoryPerson'),\n//\t\t\thidden: \"{parts:['category', 'constants>/accountCategoryPerson'], formatter: 'cus.crm.myaccounts.util.formatter.isEqual'}\",\n\t\t\tkey: \"department\",\n\t\t\tname: \"Departments\",\n\t\t\tviewName: \"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.overview.DepartmentsCustom\"\n\t\t};\n\t\tvar Modules = {\n\t\t\thidden: undefined,\n\t\t\tkey: \"module\",\n\t\t\tname: \"Modules\",\n\t\t\tviewName: \"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.overview.ModulesCustom\"\n\t\t};\n\t\tsTab.push(Departments);\n\t\tsTab.push(Modules);\n\t\treturn sTab;\n\t}\n\n\t/*\tonAfterRendering: function() {\n\n\t\t\tvar oTabs = this.oTabConfigurationModel.getData().Tabs;\n\t\t\tvar result = oTabs.filter(function(obj) {\n\t\t\t\treturn obj.key === \"department\";\n\t\t\t});\n\t\t\tvar allTabs = oTabs.filter(function(obj) {\n\t\t\t\treturn obj.key !== \"department\";\n\t\t\t});\n\t\t\tresult[0].hidden = true;\n\t\t\tallTabs.push(result[0]);\n\t\t\tthis.oTabConfigurationModel.getData().Tabs = allTabs;\n\t\t}*/\n\n});",
		"cus/crm/myaccounts/ZCRM_MYACC_EM2/view/overview/GeneralData_extDisplayFormAddressCustom.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns=\"sap.m\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:form=\"sap.ui.layout.form\"\n\txmlns:layout=\"sap.ui.layout\" xmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<!-- This extension point can be used to add fields to form:formElements -->\n\t<form:FormElement xmlns:form=\"sap.ui.layout.form\" id=\"account_room_form\"\n\tvisible=\"{parts:['category', 'constants>/accountCategoryPerson'], formatter: 'cus.crm.myaccounts.util.formatter.isEqual'}\">\n\t\t<form:label>\n\t\t\t<Label xmlns=\"sap.m\" id=\"account_room_label\" text=\"{i18n&gt;ZACCOUNT_ROOM}\"/>\n\t\t</form:label>\n\t\t<form:fields>\n\t\t\t<Text xmlns=\"sap.m\" id=\"account_room\" text=\"{MainAddress/zRoomNumber}\"/>\n\t\t</form:fields>\n\t</form:FormElement>\n\t\t<form:FormElement xmlns:form=\"sap.ui.layout.form\" id=\"account_building_form\"\n\t\tvisible=\"{parts:['category', 'constants>/accountCategoryPerson'], formatter: 'cus.crm.myaccounts.util.formatter.isEqual'}\">\n\t\t<form:label>\n\t\t\t<Label xmlns=\"sap.m\" id=\"account_building_label\" text=\"{i18n&gt;ZACCOUNT_BUILDING}\"/>\n\t\t</form:label>\n\t\t<form:fields>\n\t\t\t<Text xmlns=\"sap.m\" id=\"account_building\" text=\"{MainAddress/zBuilding}\"/>\n\t\t</form:fields>\n\t</form:FormElement>\n</core:FragmentDefinition>",
		"cus/crm/myaccounts/ZCRM_MYACC_EM2/view/overview/DepartmentsCustom.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\n\tcontrollerName=\"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.overview.DepartmentsCustom\" xmlns:layout=\"sap.ui.layout\" xmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<Table id=\"list\" mode=\"{device>/listMode}\" growing=\"true\" growingThreshold=\"10\" growingScrollToLoad=\"false\" items=\"{path: 'department>/ZDepartments'}\">\n\t\t<columns>\n\t\t\t<Column id=\"accountColumn\" width=\"16rem\" minScreenWidth=\"Small\" demandPopin=\"true\"><Label text=\"{i18n>ZACCOUNT}\"/></Column>\n\t\t\t<Column id=\"nameColumn\" width=\"16rem\" minScreenWidth=\"Medium\" demandPopin=\"true\"><Label text=\"{i18n>ZNAME}\"/></Column>\n\t\t\t<Column id=\"actions\" width=\"3rem\" minScreenWidth=\"XLarge\" demandPopin=\"true\"><Text text=\"{i18n>ACTIONS}\" /></Column>\n\t\t</columns>\n\t\t<items>\n\t\t\t<ColumnListItem id=\"columnListItem\">\n\t\t\t\t<cells>\n\t\t\t\t\t<Input value=\"{department>partner}\" editable=\"{parts:[{path:'department>mode'}, 'constants>/modeEdit'],formatter:'cus.crm.myaccounts.util.formatter.isEqual'}\"\n\t\t\t\t\tvalueHelpRequest=\"showAccountF4\" showValueHelp=\"true\"/>\n\t\t\t\t\t<Link text=\"{department>name}\" target=\"{department>partner}\" press=\"onDepartmentClicked\" class=\"sapUiSmallMarginTop sapUiTinyMarginBottom\"/>\n\t\t\t\t\t<layout:HorizontalLayout>\n\t\t\t\t\t\t<core:Icon src=\"sap-icon://edit\" id=\"actionEdit\" size=\"1.3rem\" press=\"onEditDepartmentClicked\"\n\t\t\t\t\t\t\tvisible=\"{parts:[{path:'department>mode'}, 'constants>/modeEdit'],formatter:'cus.crm.myaccounts.util.formatter.isUnequal'}\"/>\n\t\t\t\t\t\t<core:Icon src=\"sap-icon://save\" id=\"actionSave\" size=\"1.3rem\" press=\"onSaveDepartmentClicked\"\n\t\t\t\t\t\t\tvisible=\"{parts:[{path:'department>mode'}, 'constants>/modeEdit'],formatter:'cus.crm.myaccounts.util.formatter.isEqual'}\"/>\n\t\t\t\t\t\t<layout:HorizontalLayout class=\"cusMyAccountsPaddingLeft\"/>\n\t\t\t\t\t\t<!--<core:Icon src=\"sap-icon://delete\" id=\"actionDelete\" size=\"1.3rem\" press=\"onDeleteDepartmentClicked\" visible=\"true\"/> -->\n\t\t\t\t\t</layout:HorizontalLayout>\n\t\t\t\t</cells>\n\t\t\t</ColumnListItem>\n\t\t</items>\n\t</Table>\n</mvc:View>",
		"cus/crm/myaccounts/ZCRM_MYACC_EM2/view/overview/DepartmentsCustom.controller.js": "sap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"cus/crm/myaccounts/util/Constants\",\r\n\t\"cus/crm/myaccounts/util/Util\"\r\n], function(Controller, Constants) {\r\n\t\"use strict\";\r\n\r\n\treturn Controller.extend(\"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.overview.DepartmentsCustom\", {\r\n\r\n\t\tonInit: function() {\r\n\t\t\tthis.BatchOperations = [];\r\n\t\t\tvar constants = new sap.ui.model.json.JSONModel(Constants);\r\n\t\t\tthis.getView().setModel(constants, \"constants\");\r\n\t\t\tthis.editPossible = true;\r\n\r\n\t\t},\r\n\r\n\t\tonItemSelected: function() {\r\n\t\t\t//\t\tjQuery.sap.log.debug(\"cus.crm.myaccounts.view.overview.MarketingAttributes - onItemSelected\");\r\n\t\t\tthis._bindDepartments();\r\n\t\t},\r\n\r\n\t\tonDepartmentClicked: function(e) {\r\n\t\t\tthis._navToDepartment(e);\r\n\t\t},\r\n\r\n\t\t_navToDepartment: function(oEvent) {\r\n\t\t\tvar partner = oEvent.getSource().getProperty(\"target\");\r\n\t\t\tvar service = sap.ushell && sap.ushell.Container && sap.ushell.Container.getService;\r\n\t\t\tvar nav = service && service(\"CrossApplicationNavigation\");\r\n\t\t\tif (nav) {\r\n\t\t\t\tnav.toExternal({\r\n\t\t\t\t\ttarget: {\r\n\t\t\t\t\t\tsemanticObject: \"ZMyAccountsHE\",\r\n\t\t\t\t\t\taction: \"MyAccounts&/detail/AccountCollection('\" + partner + \"')\"\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetList: function() {\r\n\t\t\treturn this.byId(\"list\");\r\n\t\t},\r\n\r\n\t\tonAddDepartmentLine: function() {\r\n\t\t\tthis._checkEdit();\r\n\t\t\tif (this.editPossible === true){\r\n\t\t\t\tthis._bindDepartments();\r\n\t\t\t\tvar oDepartmentsModel = this.getList().getModel(\"department\");\r\n\t\t\t\tvar aDepartments = oDepartmentsModel.getProperty(\"/ZDepartments\");\r\n\t\t\t\tif (aDepartments.length > 0 && !aDepartments[0].partner) {\r\n\t\t\t\t\treturn; //return if an empty new line exists\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar oNewDepartment = this._generateTemplateForDepartment();\r\n\t\t\t\toNewDepartment.mode = Constants.modeEdit;\r\n\t\t\t\toNewDepartment.new = true;\r\n\t\t\t\toNewDepartment.notSaved = true;\r\n\t\t\t\taDepartments.push(oNewDepartment);\r\n\t\t\t\toDepartmentsModel.setProperty(\"/ZDepartments\", aDepartments);\r\n\t\t\t\tthis.getList().setModel(oDepartmentsModel, \"department\");\r\n\t\t\t}\t\r\n\t\t},\r\n\r\n\t\t_generateTemplateForDepartment: function() {\r\n\t\t\tvar oData = {};\r\n\t\t\toData.partner = \"\";\r\n\t\t\toData.name = \"\";\r\n\t\t\treturn oData;\r\n\t\t},\r\n\r\n\t\t_bindDepartments: function() {\r\n\t\t\t//\t\tjQuery.sap.log.debug(\"cus.crm.myaccounts.view.overview.MarketingAttributes - _bindMarketingAttributes\");\r\n\t\t\tvar that = this;\r\n\t\t\tif (!this.getList().getModel(\"department\")) {\r\n\t\t\t\tthis.getList().setModel(new sap.ui.model.json.JSONModel(), \"department\");\r\n\t\t\t}\r\n\t\t\tthis.getList().getModel(\"department\").setProperty(\"/ZDepartments\", []);\r\n\t\t\tthis.getList().setBusy(true);\r\n\t\t\tcus.crm.myaccounts.util.Util.readODataObjects(that.getView().getBindingContext(), \"ZDepartments\", [], function(results) {\r\n\t\t\t\t// build json model\r\n\t\t\t\tif (results) {\r\n\t\t\t\t\tvar aDepartments = that.getList().getModel(\"department\").getProperty(\"/ZDepartments\");\r\n\t\t\t\t\tfor (var i = 0; i < results.length; i++) {\r\n\t\t\t\t\t\tvar oDep = jQuery.extend({}, that.getView().getModel().getProperty(\"/\" + results[i]));\r\n\t\t\t\t\t\toDep.key = results[i];\r\n\t\t\t\t\t\taDepartments.push(oDep);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthat.getList().getModel(\"department\").setProperty(\"/ZDepartments\", aDepartments);\r\n\t\t\t\t\tthat.getList().setBusy(false);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tonDeleteDepartmentClicked: function(oEvent) {\r\n\t\t\tthis._checkEdit();\r\n\t\t\tif (this.editPossible === true){\r\n\t\t\t\tvar oDepContext = oEvent.getSource().getBindingContext(\"department\");\r\n\t\t\t\tvar oDepartment = oDepContext.getObject();\r\n\t\t\t\tvar lineNumber = oDepContext.sPath.substring(14);\r\n\t\t\t\tif (oDepartment.notSaved) {\r\n\t\t\t\t\t// new attribute; not yet send to the backend\r\n\t\t\t\t\tthis._removeLine(lineNumber);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar sRequestURL = oDepartment.key;\r\n\t\t\t\t\tvar oBatchOperation = this.getView().getModel().createBatchOperation(sRequestURL, \"DELETE\");\r\n\t\t\t\t\tthis._collectBatchOperation(oBatchOperation, this._onAfterSave, this._onAfterSaveWithError, lineNumber);\r\n\t\t\t\t\t//\t\t\t\toDepartment.mode = Constants.modeEdit; //needed because _removeCoherentErrorFlags will not consider this line. Also a solution with another mode like \"deleteMode\" would work\r\n\t\t\t\t}\r\n\t\t\t\t//\t\t\tthis._savePendingData(); //save other changed lines and sent all operations together\r\n\t\t\t\tthis._sendBatchOperations();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_savePendingData: function() {\r\n\t\t\tvar oDepartment = this.getList().getModel(\"department\");\r\n\t\t\tvar aDepartments = oDepartment.getProperty(\"/ZDepartments\");\r\n\t\t\tfor (var i in aDepartments) {\r\n\t\t\t\tvar oDep = aDepartments[i];\r\n\t\t\t\tif (oDep.mode === Constants.modeEdit) {\r\n\t\t\t\t\t//\t\t\t\t\tthis._removeCoherentErrorFlags(oMktAttribute); //required to save attributes which collides with each other\r\n\t\t\t\t\tvar oBindingContext = this.getView().getBindingContext();\r\n\t\t\t\t\tvar editMode = oDep.new ? true : false;\r\n\t\t\t\t\tvar sRequestURL, oBatchOperation;\r\n\r\n\t\t\t\t\tif (!editMode) {\r\n\t\t\t\t\t\tsRequestURL = oDep.key; //TODO\r\n\t\t\t\t\t\toBatchOperation = oBindingContext.getModel().createBatchOperation(sRequestURL, \"PUT\", this._getStripedAttribute(oDep), {\r\n\t\t\t\t\t\t\tcontextPath: \"/ZDepartments/\" + i\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsRequestURL = oBindingContext.sPath + \"/ZDepartments\";\r\n\t\t\t\t\t\toBatchOperation = oBindingContext.getModel().createBatchOperation(sRequestURL, \"POST\", this._getStripedAttribute(oDep), {\r\n\t\t\t\t\t\t\tcontextPath: \"/ZDepartments/\" + i\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._collectBatchOperation(oBatchOperation, this._onAfterSave, this._onAfterSaveWithError, oDep);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._sendBatchOperations();\r\n\t\t},\r\n\r\n\t\t_getStripedAttribute: function(oDep) {\r\n\t\t\tvar oDepartment = jQuery.extend({}, oDep);\r\n\t\t\tdelete oDepartment.new;\r\n\t\t\tdelete oDepartment.mode;\r\n\t\t\tdelete oDepartment.key;\r\n\t\t\tdelete oDepartment.notSaved;\r\n\t\t\treturn oDepartment;\r\n\t\t},\r\n\r\n\t\t_removeLine: function(lineNumber) {\r\n\t\t\tvar oDepartment = this.getList().getModel(\"department\");\r\n\t\t\tvar aDepartments = oDepartment.getProperty(\"/ZDepartments\");\r\n\t\t\taDepartments.splice(lineNumber, 1);\r\n\t\t\toDepartment.setProperty(\"/ZDepartments\", aDepartments);\r\n\t\t},\r\n\r\n\t\tonSaveDepartmentClicked: function(oEvent) {\r\n\t\t\tthis._checkEdit();\r\n\t\t\tif (this.editPossible === true){\r\n\t\t\t\tthis._savePendingData();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonEditDepartmentClicked: function(oEvent) {\r\n\t\t\tthis._checkEdit();\r\n\t\t\tif (this.editPossible === true){\r\n\t\t\t\tvar oDepartmentContext = oEvent.getSource().getBindingContext(\"department\");\r\n\t\t\t\tvar oDepartment = oDepartmentContext.getObject();\r\n\t\t\t\toDepartment.mode = Constants.modeEdit;\r\n\t\t\t\tthis.refreshUI();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\trefreshUI: function() {\r\n\t\t\tvar oDepartment = this.getList().getModel(\"department\");\r\n\t\t\tvar aDepartments = oDepartment.getProperty(\"/ZDepartments\");\r\n\t\t\toDepartment.setProperty(\"/ZDepartments\", aDepartments);\r\n\t\t},\r\n\r\n\t\t_collectBatchOperation: function(oBatchOperation, callBackSuccess, callBackError, callbackArguments) {\r\n\t\t\tif (this.requestURIIncludedInQueue(oBatchOperation.requestUri))\r\n\t\t\t\treturn;\r\n\t\t\tvar oBatch = {\r\n\t\t\t\toperation: oBatchOperation,\r\n\t\t\t\tcallBackSuccess: callBackSuccess,\r\n\t\t\t\tcallBackError: callBackError,\r\n\t\t\t\tcallbackArguments: callbackArguments\r\n\t\t\t};\r\n\t\t\tif (oBatchOperation.method === 'DELETE') {\r\n\t\t\t\t//  process DELETE operations first --> add oBatch on index 0\r\n\t\t\t\tthis.BatchOperations.unshift(oBatch);\r\n\t\t\t} else {\r\n\t\t\t\tthis.BatchOperations.push(oBatch);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\trequestURIIncludedInQueue: function(requestUri) {\r\n\t\t\tfor (var i in this.BatchOperations)\r\n\t\t\t\tif (this.BatchOperations[i].operation.requestUri === requestUri)\r\n\t\t\t\t\treturn true;\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\t_sendBatchOperations: function() {\r\n\t\t\t//some operations can be combined but saving changes should be separate because in batch either everything or nothing is saved\r\n\t\t\tif (!this.BatchOperations.length) {\r\n\t\t\t\tthis.refreshUI(); //if the queue is empty, refresh UI\r\n\t\t\t\tthis._setBusy(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar aBatchOperationsForProcessing = [];\r\n\t\t\tvar that = this;\r\n\t\t\tvar continueProcessing = true;\r\n\t\t\tvar batchMethod = this.BatchOperations[0].operation.method;\r\n\t\t\tvar aBatchOperation = [];\r\n\t\t\twhile (continueProcessing && this.BatchOperations.length) {\r\n\t\t\t\tif (batchMethod === this.BatchOperations[0].operation.method) {\r\n\t\t\t\t\taBatchOperationsForProcessing.push(this.BatchOperations[0]);\r\n\t\t\t\t\taBatchOperation.push(this.BatchOperations[0].operation);\r\n\t\t\t\t\tthis.BatchOperations.splice(0, 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcontinueProcessing = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar backendBatchRequestFunction = cus.crm.myaccounts.util.Util.sendBatchChangeOperations;\r\n\t\t\tif (batchMethod === 'GET')\r\n\t\t\t\tbackendBatchRequestFunction = cus.crm.myaccounts.util.Util.sendBatchReadOperations;\r\n\r\n\t\t\tbackendBatchRequestFunction(\r\n\t\t\t\tthis.getView().getModel(), aBatchOperation,\r\n\t\t\t\tfunction(_aResponseObjects) {\r\n\t\t\t\t\tvar aResponseObjects = _aResponseObjects;\r\n\t\t\t\t\tif (batchMethod === 'GET') { //read delivers the response in different format\r\n\t\t\t\t\t\taResponseObjects = [];\r\n\t\t\t\t\t\tfor (var key in _aResponseObjects)\r\n\t\t\t\t\t\t\taResponseObjects.push(_aResponseObjects[key]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (var i in aBatchOperationsForProcessing) {\r\n\t\t\t\t\t\tif (aBatchOperationsForProcessing[i].callBackSuccess) {\r\n\t\t\t\t\t\t\tvar aArguments = [];\r\n\t\t\t\t\t\t\tvar oResponseObject = null;\r\n\t\t\t\t\t\t\tif (aResponseObjects.length > i)\r\n\t\t\t\t\t\t\t\toResponseObject = aResponseObjects[i];\r\n\t\t\t\t\t\t\taArguments.push(aBatchOperationsForProcessing[i].operation);\r\n\t\t\t\t\t\t\taArguments.push(oResponseObject);\r\n\t\t\t\t\t\t\tif (aBatchOperationsForProcessing[i].callbackArguments instanceof Array) {\r\n\t\t\t\t\t\t\t\taArguments = $.merge(aArguments, aBatchOperationsForProcessing[i].callbackArguments);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\taArguments.push(aBatchOperationsForProcessing[i].callbackArguments);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\taBatchOperationsForProcessing[i].callBackSuccess.apply(that, aArguments);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthat._sendBatchOperations();\r\n\t\t\t\t},\r\n\t\t\t\tfunction(oError) {\r\n\t\t\t\t\tfor (var i in aBatchOperationsForProcessing) {\r\n\t\t\t\t\t\tif (aBatchOperationsForProcessing[i].callBackError) {\r\n\t\t\t\t\t\t\tvar aArguments = [];\r\n\t\t\t\t\t\t\taArguments.push(aBatchOperationsForProcessing[i].operation);\r\n\t\t\t\t\t\t\taArguments.push(oError);\r\n\t\t\t\t\t\t\tif (aBatchOperationsForProcessing[i].callbackArguments instanceof Array) {\r\n\t\t\t\t\t\t\t\taArguments = $.merge(aArguments, aBatchOperationsForProcessing[i].callbackArguments);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\taArguments.push(aBatchOperationsForProcessing[i].callbackArguments);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\taBatchOperationsForProcessing[i].callBackError.apply(that, aArguments);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthat.refreshUI();\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t_setBusy: function(busy) {\r\n\t\t\tif (!this.oBusyDialog)\r\n\t\t\t\tthis.oBusyDialog = new sap.m.BusyDialog();\r\n\t\t\tif (busy)\r\n\t\t\t\tthis.oBusyDialog.open();\r\n\t\t\telse\r\n\t\t\t\tthis.oBusyDialog.close();\r\n\t\t},\r\n\r\n\t\t_copyAttributesOfObject2ToObject1: function(object1, object2) {\r\n\t\t\tif (!object2)\r\n\t\t\t\treturn;\r\n\t\t\tfor (var key in object1) {\r\n\t\t\t\tif (object2.hasOwnProperty(key))\r\n\t\t\t\t\tobject1[key] = object2[key];\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onAfterSave: function(oBatchOperation, oResponseObject, callbackArgument) {\r\n\t\t\tvar oDepartment = callbackArgument;\r\n\t\t\tswitch (oBatchOperation.method) {\r\n\t\t\t\tcase \"DELETE\":\r\n\t\t\t\t\t//after delete remove line in table\r\n\t\t\t\t\tvar lineNumber = callbackArgument;\r\n\t\t\t\t\tthis._removeLine(lineNumber);\r\n\t\t\t\t\treturn;\r\n\t\t\t\tcase \"POST\":\r\n\t\t\t\t\tdelete oDepartment.mode;\r\n\t\t\t\t\tdelete oDepartment.notSaved;\r\n\t\t\t\t\tthis._copyAttributesOfObject2ToObject1(oDepartment, oResponseObject);\r\n\t\t\t\t\tthis._bindDepartments();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"PUT\":\r\n\t\t\t\t\tdelete oDepartment.mode;\r\n\t\t\t\t\tdelete oDepartment.notSaved;\r\n\t\t\t\t\tthis._copyAttributesOfObject2ToObject1(oDepartment, oResponseObject);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.refreshUI();\r\n\t\t},\r\n\r\n\t\tshowAccountF4: function(oEvent) {\r\n\t\t\tif (!this._accountSelectDialog) {\r\n\t\t\t\tthis._accountSelectDialog = new sap.ui.xmlfragment(\"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.overview.ZAccountSelectDialog\", this);\r\n\t\t\t\tthis._accountSelectDialog.setModel(this.getView().getModel());\r\n\t\t\t\tthis._accountSelectDialog.setModel(this.getView().getModel(\"i18n\"), \"i18n\");\r\n\r\n\t\t\t}\r\n\t\t\tvar oDepartment = oEvent.getSource().getBindingContext(\"department\").getObject();\r\n\t\t\tvar oDataTemplate = new sap.ui.core.CustomData({key:\"accountID\"});\r\n\t\t\toDataTemplate.bindProperty(\"value\", \"accountID\");\r\n\t\t\tthis.accountF4Template = new sap.m.StandardListItem({\r\n\t\t\t\ttitle: \"{fullName}\",\r\n\t\t\t\tactive: true\r\n\t\t\t});\r\n\t\t\tthis.accountF4Template.addCustomData(oDataTemplate);\r\n\t\t\tvar oFilter = new sap.ui.model.Filter(\"category\", sap.ui.model.FilterOperator.EQ, \"2\");\r\n\t\t\tvar oFilter2 = new sap.ui.model.Filter(\"fullName\", sap.ui.model.FilterOperator.NE, \"\");\r\n\t\t\tthis._accountSelectDialog.getAggregation('_dialog').getContent()[1].bindAggregation(\"items\", {\r\n\t\t\t\tpath: \"/AccountCollection\",\r\n\t\t\t\tparameters: {\r\n\t\t\t\t\tselect: \"accountID,fullName\"\r\n\t\t\t\t},\r\n\t\t\t\tfilters: [oFilter, oFilter2],\r\n\t\t\t\ttemplate: this.accountF4Template\r\n\t\t\t});\r\n\t\t\tthis._accountSelectDialog.oDepartment = oDepartment;\r\n\t\t\tthis._accountSelectDialog.open();\r\n\t\t},\r\n\r\n\t\tcloseAccountF4: function(oEvent) {\r\n\t\t\tthis.byId('dialogAccountF4').close();\r\n\t\t\tthis.accountf4open = \"\";\r\n\t\t},\r\n\r\n\t\tsetAccount: function(oEvent) {\r\n\t\t\tvar selectedItem = oEvent.getParameter(\"selectedItem\");\r\n\t\t\tvar accountName = selectedItem.getProperty(\"title\");\r\n\t\t\tvar accountId = selectedItem.getCustomData()[0].getProperty(\"value\");\r\n\r\n\t\t\tvar oDepartment = this._accountSelectDialog.oDepartment;\r\n\t\t\toDepartment.partner = accountId;\r\n\t\t\toDepartment.name = accountName;\r\n\t\t\tthis.refreshUI();\r\n\t\t},\r\n\r\n\t\tsearchAccount: function(oEvent) {\r\n\r\n\t\t\tvar sValue = oEvent.getParameter(\"value\");\r\n\t\t\tvar aFilters = [];\r\n\r\n\t\t\tif (sValue !== \"\") {\r\n\r\n\t\t\t\t//var sAccountAnnotation = cus.crm.opportunity.util.schema._getEntityAnnotation(this.oModel,'service-schema-version','Account');\r\n\t\t\t\tvar filterName = \"fullName\";\r\n\t\t\t\t//push the necessary filter\r\n\t\t\t\t//aFilters.push(new sap.ui.model.Filter(((sAccountAnnotation === null) ? \"name1\" : \"fullName\"), sap.ui.model.FilterOperator.Contains, sValue));\r\n\t\t\t\taFilters.push(new sap.ui.model.Filter(filterName, sap.ui.model.FilterOperator.Contains, sValue));\r\n\t\t\t}\r\n\r\n\t\t\tvar itemsBinding = oEvent.getParameter(\"itemsBinding\");\r\n\r\n\t\t\tif (itemsBinding) {\r\n\t\t\t\titemsBinding.aApplicationFilters = [];\r\n\t\t\t\titemsBinding.filter(aFilters);\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tgetFooterButtons: function() {\r\n\t\t\tvar that = this;\r\n\t\t\treturn [{\r\n\t\t\t\tsIcon: \"sap-icon://add\",\r\n\t\t\t\tsTooltip: cus.crm.myaccounts.util.Util.geti18NText(\"ZADD_DEPARTMENT_TOOLTIP\"),\r\n\t\t\t\tsId: \"addButton\",\r\n\t\t\t\tonBtnPressed: function() {\r\n\t\t\t\t\tthat.onAddDepartmentLine();\r\n\t\t\t\t}\r\n\t\t\t}];\r\n\t\t},\r\n\t\t\r\n\t_checkEdit: function() {\r\n\t\tvar ctx1 = this.getView().getBindingContext().getObject().accountID;\r\n\t\tvar that = this;\r\n\t\tvar oModel = this.getView().getModel();\r\n\t\toModel.read(\"EditAuthorizationCheck\", null, {\r\n\t\t\t\tObjectID: oModel.formatValue(ctx1, \"Edm.String\")\r\n\t\t\t}, false, function(oData, resp) {\r\n\t\t\t\tif (oData.EditAuthorizationCheck.ActionSuccessful == \"X\") {\r\n\t\t\t\t\tthat.editPossible = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthat.editPossible = false;\r\n\t\t\t\t\tthat._bindDepartments();\r\n\t\t\t\t\tsap.ca.ui.message.showMessageBox({\r\n\t\t\t\t\t\ttype: sap.ca.ui.message.Type.ERROR,\r\n\t\t\t\t\t\tmessage: oData.EditAuthorizationCheck.Message,\r\n\t\t\t\t\t\tdetails: null\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, null);\r\n\t\t\r\n\r\n\t}\r\n\r\n\t});\r\n\r\n});",
		"cus/crm/myaccounts/ZCRM_MYACC_EM2/view/search/SearchResultCustom.controller.js": "sap.ui.controller(\"cus.crm.myaccounts.ZCRM_MYACC_EM2.view.search.SearchResultCustom\", {\n\n\t/*\n\t * Change the order of filters (MyCorporateAccounts by default)\n\t */\n\t_getPossibleAccountFilters: function() {\n\t\tif (this.EHP2Backend) {\n\t\t\treturn [cus.crm.myaccounts.util.Constants.filterMyAccounts,\n\t\t\t\tcus.crm.myaccounts.util.Constants.filterAllAccounts\n\t\t\t];\n\t\t}\n\t\treturn [cus.crm.myaccounts.util.Constants.filterMyCorporateAccounts,\n\t\t\tcus.crm.myaccounts.util.Constants.filterMyAccounts,\n\t\t\tcus.crm.myaccounts.util.Constants.filterMyIndividualAccounts,\n\t\t\tcus.crm.myaccounts.util.Constants.filterMyAccountGroups,\n\t\t\tcus.crm.myaccounts.util.Constants.filterAllAccounts,\n\t\t\tcus.crm.myaccounts.util.Constants.filterAllIndividualAccounts,\n\t\t\tcus.crm.myaccounts.util.Constants.filterAllCorporateAccounts,\n\t\t\tcus.crm.myaccounts.util.Constants.filterAllAccountGroups\n\t\t];\n\t},\n\t\n\t/*\n\t* Change default filterMyAccounts to filterMyCorporateAccounts\n\t*/\n\t_handleNavToWithFilter: function(oEvent) {\n\t\t// In case of doing a cross-app navigation from MyAccounts to another app\n\t\t// and then doing a back navigation to the result list in MyAccounts,\n\t\t// the filter should be kept\n\t\tjQuery.sap.log.debug(\"cus.crm.myaccounts.view.search.SearchResult - handleNavTo\");\n\t\tif (oEvent.getParameter(\"name\") === \"mainPage\" || oEvent.getParameter(\"name\") === \"S2\") {\n\t\t\tvar filterState = oEvent.getParameter(\"arguments\").filterState;\n\t\t\tif (filterState) {\n\t\t\t\tthis.selectedKey = filterState;\n\t\t\t} else {\n\t\t\t\tthis.selectedKey = cus.crm.myaccounts.util.Constants.filterMyCorporateAccounts; //filterMyAccounts;\n\t\t\t}\n\t\t\tthis._bindTable();\n\t\t\tthis.setHeaderFooterOptions(this._getHeaderFooterOptions());\n\t\t}\n\t},\n\n});"
	}
});